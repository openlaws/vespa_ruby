---
http_interactions:
- request:
    method: post
    uri: http://localhost:8080/search/
    body:
      encoding: UTF-8
      string: '{"yql":"select * from sources * where name contains ''Congress''","hits":10}'
    headers:
      User-Agent:
      - Faraday v2.9.0
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '20774'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Sat, 30 Mar 2024 05:37:34 GMT
      Vary:
      - Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 30 Mar 2024 05:37:34 GMT
recorded_with: VCR 6.2.0
