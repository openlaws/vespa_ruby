---
http_interactions:
- request:
    method: post
    uri: http://localhost:8080/search/
    body:
      encoding: UTF-8
      string: '{"yql":"select * from sources * where default contains ''congress''","hits":10}'
    headers:
      User-Agent:
      - Faraday v2.9.0
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Sat, 30 Mar 2024 05:37:32 GMT
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"root":{"id":"toplevel","relevance":1.0,"fields":{"totalCount":10177},"coverage":{"coverage":100,"documents":425041,"full":true,"nodes":1,"results":1,"resultsFull":1},"children":[{"id":"id:division:division::958b0f24-03fb-4ea9-8ca4-b70bdecea2c9","relevance":0.2729080893596109,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::958b0f24-03fb-4ea9-8ca4-b70bdecea2c9","id":"958b0f24-03fb-4ea9-8ca4-b70bdecea2c9","jurisdiction":"FED","lawKey":"FED-CFR","label":"section_401_170","path":"title_20.chapter_iii.part_401.subpart_c.section_401_170","divisionType":"401.170","identifier":"401.170","name":"Congress","plaintextContent":"(a) We disclose information to either House of Congress. We also disclose information to any committee or subcommittee of either House, or to any joint committee of Congress or subcommittee of that committee, if the information is on a matter within the committee's or subcommittee's jurisdiction.(b) We disclose to any member of Congress the information needed to respond to constituents' requests for information about themselves (including requests from parents of minors, or legal guardians). However, these disclosures are subject to the restrictions in §§ 401.35 through 401.60.","sourceUrl":"https://ecfr.federalregister.gov/current/title-20/section-401.170","isRepealed":false,"isReserved":false,"retrievalDate":20240113}},{"id":"id:division:division::1a05b30b-0dc6-4049-a1f2-5b3bcb7b7dd3","relevance":0.24754516034839671,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::1a05b30b-0dc6-4049-a1f2-5b3bcb7b7dd3","id":"1a05b30b-0dc6-4049-a1f2-5b3bcb7b7dd3","jurisdiction":"FED","lawKey":"FED-USC","label":"section_7384","path":"title_42.chapter_84.subchapter_xvi.section_7384","divisionType":"7384","identifier":"7384","name":"Findings; sense of Congress","plaintextContent":"(a) FindingsThe Congress finds the following:    (1) Since World War II, Federal nuclear activities have been explicitly recognized under Federal law as activities that are ultra-hazardous. Nuclear weapons production and testing have involved unique dangers, including potential catastrophic nuclear accidents that private insurance carriers have not covered and recurring exposures to radioactive substances and beryllium that, even in small amounts, can cause medical harm.    (2) Since the inception of the nuclear weapons program and for several decades afterwards, a large number of nuclear weapons workers at sites of the Department of Energy and at sites of vendors who supplied the Cold War effort were put at risk without their knowledge and consent for reasons that, documents reveal, were driven by fears of adverse publicity, liability, and employee demands for hazardous duty pay.    (3) Many previously secret records have documented unmonitored exposures to radiation and beryllium and continuing problems at these sites across the Nation, at which the Department of Energy and its predecessor agencies have been, since World War II, self-regulating with respect to nuclear safety and occupational safety and health. No other hazardous Federal activity has been permitted to be carried out under such sweeping powers of self-regulation.    (4) The policy of the Department of Energy has been to litigate occupational illness claims, which has deterred workers from filing workers’ compensation claims and has imposed major financial burdens for such employees who have sought compensation. Contractors of the Department have been held harmless and the employees have been denied workers’ compensation coverage for occupational disease.    (5) Over the past 20 years, more than two dozen scientific findings have emerged that indicate that certain of such employees are experiencing increased risks of dying from cancer and non-malignant diseases. Several of these studies have also established a correlation between excess diseases and exposure to radiation and beryllium.    (6) While linking exposure to occupational hazards with the development of occupational disease is sometimes difficult, scientific evidence supports the conclusion that occupational exposure to dust particles or vapor of beryllium can cause beryllium sensitivity and chronic beryllium disease. Furthermore, studies indicate than 98 percent of radiation-induced cancers within the nuclear weapons complex have occurred at dose levels below existing maximum safe thresholds.    (7) Existing information indicates that State workers’ compensation programs do not provide a uniform means of ensuring adequate compensation for the types of occupational illnesses and diseases that relate to the employees at those sites.    (8) To ensure fairness and equity, the civilian men and women who, over the past 50 years, have performed duties uniquely related to the nuclear weapons production and testing programs of the Department of Energy and its predecessor agencies should have efficient, uniform, and adequate compensation for beryllium-related health conditions and radiation-related health conditions.    (9) On April 12, 2000, the Secretary of Energy announced that the Administration intended to seek compensation for individuals with a broad range of work-related illnesses throughout the Department of Energy’s nuclear weapons complex.    (10) However, as of October 2, 2000, the Administration has failed to provide Congress with the necessary legislative and budget proposals to enact the promised compensation program.(b) Sense of CongressIt is the sense of Congress that-    (1) a program should be established to provide compensation to covered employees;    (2) a fund for payment of such compensation should be established on the books of the Treasury;    (3) payments from that fund should be made only after-        (A) the identification of employees of the Department of Energy (including its predecessor agencies), and of contractors of the Department, who may be members of the group of covered employees;        (B) the establishment of a process to receive and administer claims for compensation for disability or death of covered employees;        (C) the submittal by the President of a legislative proposal for compensation of such employees that includes the estimated annual budget resources for that compensation; and        (D) consideration by the Congress of the legislative proposal submitted by the President; and    (4) payments from that fund should commence not later than fiscal year 2002.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title42-section7384&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Pub. L. 106-398, § 1 [div. C, title XXXVI, § 3602], Oct. 30, 2000, 114 Stat. 1654, 1654A-495.)\n\nStatutory Notes and Related Subsidiaries\n\nShort Title\nPub. L. 106-398, § 1 [div. C, title XXXVI, § 3601], Oct. 30, 2000, 114 Stat. 1654, 1654A-495, provided that: “This title [enacting this subchapter] may be cited as the ‘Energy Employees Occupational Illness Compensation Program Act of 2000’.”\n\n\nUpdate of Report on Residual Contamination of Facilities\nPub. L. 108-375, div. C, title XXXI, § 3169, Oct. 28, 2004, 118 Stat. 2191, provided that:\n\n“(a) Update of Report.-\nNot later than December 31, 2006, the Director of the National Institute for Occupational Safety and Health shall submit to Congress an update to the report required by section 3151(b) of the National Defense Authorization Act for Fiscal Year 2002 (Public Law 107-107; 42 U.S.C. 7384 note).\n\n\n“(b) Elements.-\nThe update shall-\n\t“(1) for each facility for which such report found that insufficient information was available to determine whether significant residual contamination was present, determine whether significant residual contamination was present;\n\n\n\t“(2) for each facility for which such report found that significant residual contamination remained present as of the date of the report, determine the date on which such contamination ceased to be present;\n\n\n\t“(3) for each facility for which such report found that significant residual contamination was present but for which the Director has been unable to determine the extent to which such contamination is attributable to atomic weapons-related activities, identify the specific dates of coverage attributable to such activities and, in so identifying, presume that such contamination is attributable to such activities until there is evidence of decontamination of residual contamination identified with atomic weapons-related activities;\n\n\n\t“(4) for each facility for which such report found significant residual contamination, determine whether it is at least as likely as not that such contamination could have caused an employee who was employed at such facility only during the residual contamination period to contract a cancer or beryllium illness compensable under subtitle B of the Energy Employees Occupational Illness Compensation Program Act of 2000 [42 U.S.C. 7384l et seq.]; and\n\n\n\t“(5) if new information that pertains to the report has been made available to the Director since that report was submitted, identify and describe such information.\n\n\n\n“(c) Publication.-\nThe Director shall ensure that the report referred to in subsection (a) is published in the Federal Register not later than 15 days after being released.”\n\n\n\n\nStudy of Residual Contamination of Facilities\nPub. L. 107-107, div. C, title XXXI, § 3151(b), Dec. 28, 2001, 115 Stat. 1375, provided that:\n\n“(1) The National Institute for Occupational Safety and Health shall, with the cooperation of the Department of Energy and the Department of Labor, carry out a study on the following matters:\n\t“(A) Whether or not significant contamination remained in any atomic weapons employer facility or facility of a beryllium vendor after such facility discontinued activities relating to the production of nuclear weapons.\n\n\n\t“(B) If so, whether or not such contamination could have caused or substantially contributed to the cancer of a covered employee with cancer or a covered beryllium illness, as the case may be.\n\n\n\n“(2)\n(A) The National Institute for Occupational Safety and Health shall submit to the applicable congressional committees the following reports:\t“(i) Not later than 180 days after the date of the enactment of this Act [Dec. 28, 2001], a report on the progress made as of the date of the report on the study required by paragraph (1).\n\n\t“(ii) Not later than one year after the date of the enactment of this Act, a final report on the study required by paragraph (1).\n\n\n\n“(B) In this paragraph, the term ‘applicable congressional committees’ means-\t“(i) the Committee on Armed Services, Committee on Appropriations, Committee on the Judiciary, and Committee on Health, Education, Labor, and Pensions of the Senate; and\n\n\t“(ii) the Committee on Armed Services, Committee on Appropriations, Committee on the Judiciary, and Committee on Education and the Workforce of the House of Representatives.\n\n\n\n\n“(3) Amounts for the study under paragraph (1) shall be derived from amounts authorized to be appropriated by section 3614(a) of the Energy Employees Occupational Illness Compensation Program Act of 2000 (114 Stat. 1654A-498) [42 U.S.C. 7384g(a)].\n\n\n“(4) In this subsection:\n\t“(A) The terms ‘atomic weapons employer facility’, ‘beryllium vendor’, ‘covered employee with cancer’, and ‘covered beryllium illness’ have the meanings given those terms in section 3621 of the Energy Employees Occupational Illness Compensation Program Act of 2000 (114 Stat. 1654A-498; 42 U.S.C. 7384l).\n\n\n\t“(B) The term ‘contamination’ means the presence of any-\t\t“(i) material that emitted radiation and was used in the production of an atomic weapon, excluding uranium mining and milling; or\n\n\t\t“(ii) beryllium dust, particles, or vapor,\n\n\nexposure to which could cause or substantially contribute to the cancer of a covered employee with cancer or a covered beryllium illness, as the case may be.”\n\n\n\n\n\nExecutive Documents\n\n\nEx. Ord. No. 13179. Providing Compensation to America’s Nuclear Weapons Workers\n\n\nEx. Ord. No. 13179, Dec. 7, 2000, 65 F.R. 77487, provided:\nBy the authority vested in me as President by the Constitution and the laws of the United States of America, including Public Law 106-398, the Energy Employees Occupational Illness Compensation Program Act of 2000 [42 U.S.C. 7384 et seq.] (Public Law 106-398, the “Act”), and to allocate the responsibilities imposed by that legislation and to provide for further legislative efforts, it is hereby ordered as follows:\n\nSection 1. Policy. Since World War II, hundreds of thousands of men and women have served their Nation in building its nuclear defense. In the course of their work, they overcame previously unimagined scientific and technical challenges. Thousands of these courageous Americans, however, paid a high price for their service, developing disabling or fatal illnesses as a result of exposure to beryllium, ionizing radiation, and other hazards unique to nuclear weapons production and testing. Too often, these workers were neither adequately protected from, nor informed of, the occupational hazards to which they were exposed.\n\nExisting workers’ compensation programs have failed to provide for the needs of these workers and their families. Federal workers’ compensation programs have generally not included these workers. Further, because of long latency periods, the uniqueness of the hazards to which they were exposed, and inadequate exposure data, many of these individuals have been unable to obtain State workers’ compensation benefits. This problem has been exacerbated by the past policy of the Department of Energy (DOE) and its predecessors of encouraging and assisting DOE contractors in opposing the claims of workers who sought those benefits. This policy has recently been reversed.\n\nWhile the Nation can never fully repay these workers or their families, they deserve recognition and compensation for their sacrifices. Since the Administration’s historic announcement in July of 1999 that it intended to compensate DOE nuclear weapons workers who suffered occupational illnesses as a result of exposure to the unique hazards in building the Nation’s nuclear defense, it has been the policy of this Administration to support fair and timely compensation for these workers and their survivors. The Federal Government should provide necessary information and otherwise help employees of the DOE or its contractors determine if their illnesses are associated with conditions of their nuclear weapons-related work; it should provide workers and their survivors with all pertinent and available information necessary for evaluating and processing claims; and it should ensure that this program minimizes the administrative burden on workers and their survivors, and respects their dignity and privacy. This order sets out agency responsibilities to accomplish these goals, building on the Administration’s articulated principles and the framework set forth in the Energy Employees Occupational Illness Compensation Program Act of 2000 [42 U.S.C. 7384 et seq.]. The Departments of Labor, Health and Human Services, and Energy shall be responsible for developing and implementing actions under the Act to compensate these workers and their families in a manner that is compassionate, fair, and timely. Other Federal agencies, as appropriate, shall assist in this effort.\n\nSec. 2. Designation of Responsibilities for Administering the Energy Employees’ Occupational Illness Compensation Program (“Program”).\n\n(a) Secretary of Labor. The Secretary of Labor shall have primary responsibility for administering the Program. Specifically, the Secretary shall:\n\n(i) Administer and decide all questions arising under the Act not assigned to other agencies by the Act or by this order, including determining the eligibility of individuals with covered occupational illnesses and their survivors and adjudicating claims for compensation and benefits;\n\n(ii) No later than May 31, 2001, promulgate regulations for the administration of the Program, except for functions assigned to other agencies pursuant to the Act or this order;\n\n(iii) No later than July 31, 2001, ensure the availability, in paper and electronic format, of forms necessary for making claims under the Program; and\n\n(iv) Develop informational materials, in coordination with the Secretary of Energy and the Secretary of Health and Human Services, to help potential claimants understand the Program and the application process, and provide these materials to individuals upon request and to the Secretary of Energy and the Attorney General for dissemination to potentially eligible individuals.\n\n(b) Secretary of Health and Human Services. The Secretary of Health and Human Services shall:\n\n(i) No later than May 31, 2001, promulgate regulations establishing:\n\n(A) guidelines, pursuant to section 3623(c) of the Act [42 U.S.C. 7384n(c)], to assess the likelihood that an individual with cancer sustained the cancer in the performance of duty at a Department of Energy facility or an atomic weapons employer facility, as defined by the Act; and\n\n(B) methods, pursuant to section 3623(d) of the Act, for arriving at and providing reasonable estimates of the radiation doses received by individuals applying for assistance under this program for whom there are inadequate records of radiation exposure;\n\n(ii) In accordance with procedures developed by the Secretary of Health and Human Services, consider and issue determinations on petitions by classes of employees to be treated as members of the Special Exposure Cohort;\n\n(iii) With the assistance of the Secretary of Energy, apply the methods promulgated under subsection (b)(i)(B) to estimate the radiation doses received by individuals applying for assistance;\n\n(iv) Upon request from the Secretary of Energy, appoint members for a physician panel or panels to consider individual workers’ compensation claims as part of the Worker Assistance Program under the process established pursuant to subsection (c)(v); and\n\n(v) Provide the Advisory Board established under section 4 of this order with administrative services, funds, facilities, staff, and other necessary support services and perform the administrative functions of the President under the Federal Advisory Committee Act, as amended ([former] 5 U.S.C. App.) [see 5 U.S.C. 1001 et seq.], with respect to the Advisory Board.\n\n(c) Secretary of Energy. The Secretary of Energy shall:\n\n(i) Provide the Secretary of Health and Human Services and the Advisory Board on Radiation and Worker Health access, in accordance with law, to all relevant information pertaining to worker exposures, including access to restricted data, and any other technical assistance needed to carry out their responsibilities under subsection (b)(ii) and section 4(b), respectively.\n\n(ii) Upon request from the Secretary of Health and Human Services or the Secretary of Labor, and as permitted by law, require a DOE contractor, subcontractor, or designated beryllium vendor, pursuant to section 3631(c) of the Act [42 U.S.C. 7384v(c)], to provide information relevant to a claim under this Program;\n\n(iii) Identify and notify potentially eligible individuals of the availability of compensation under the Program;\n\n(iv) Designate, pursuant to sections 3621(4)(B) and 3622 of the Act [42 U.S.C. 7384l(4)(B), 7384m], atomic weapons employers and additions to the list of designated beryllium vendors;\n\n(v) Pursuant to Subtitle D of the Act [42 U.S.C. 7385o], negotiate agreements with the chief executive officer of each State in which there is a DOE facility, and other States as appropriate, to provide assistance to a DOE contractor employee on filing a State workers’ compensation system claim, and establish a Worker Assistance Program to help individuals whose illness is related to employment in the DOE’s nuclear weapons complex, or the individual’s survivor if the individual is deceased, in applying for State workers’ compensation benefits. This assistance shall include:\n\n(1) Submittal of reasonable claims to a physician panel, appointed by the Secretary of Health and Human Services and administered by the Secretary of Energy, under procedures established by the Secretary of Energy, for determination of whether the individual’s illness or death arose out of and in the course of employment by the DOE or its contractors and exposure to a toxic substance at a DOE facility; and\n\n(2) For cases determined by the physician panel and the Secretary of Energy under section 3661(d) and (e) of the Act [42 U.S.C. 7385o(d), (e)] to have arisen out of and in the course of employment by the DOE or its contractors and exposure to a toxic substance at a DOE facility, provide assistance to the individual in filing for workers’ compensation benefits. The Secretary shall not contest these claims and, to the extent permitted by law, shall direct a DOE contractor who employed the applicant not to contest the claim;\n\n(vi) Report on the Worker Assistance Program by making publicly available on at least an annual basis claims-related data, including the number of claims filed, the number of illnesses found to be related to work at a DOE facility, job location and description, and number of successful State workers’ compensation claims awarded; and\n\n(vii) No later than January 15, 2001, publish in the Federal Register a list of atomic weapons employer facilities within the meaning of section 3621(5) of the Act [42 U.S.C. 7384l(5)], Department of Energy employer facilities within the meaning of section 3621(12) of the Act, and a list of facilities owned and operated by a beryllium vendor, within the meaning of section 3621(6) of the Act.\n\n(d) Attorney General. The Attorney General shall:\n\n(i) Develop procedures to notify, to the extent possible, each claimant (or the survivor of that claimant if deceased) whose claim for compensation under section 5 of the Radiation Exposure Compensation Act [Pub. L. 101-426, 42 U.S.C. 2210 note] has been or is approved by the Department of Justice, of the availability of supplemental compensation and benefits under the Energy Employees Occupational Illness Compensation Program;\n\n(ii) Identify and notify eligible covered uranium employees or their survivors of the availability of supplemental compensation under the Program; and\n\n(iii) Upon request by the Secretary of Labor, provide information needed to adjudicate the claim of a covered uranium employee under this Program.\n\nSec. 3. Establishment of Interagency Working Group.\n\n(a) There is hereby established an Interagency Working Group to be composed of representatives from the Office of Management and Budget, the National Economic Council, and the Departments of Labor, Energy, Health and Human Services, and Justice.\n\n(b) The Working Group shall:\n\n(i) By January 1, 2001, develop a legislative proposal to ensure the Program’s fairness and efficiency, including provisions to assure adequate administrative resources and swift dispute resolution; and\n\n(ii) Address any impediments to timely and coordinated Program implementation.\n\nSec. 4. Establishment of Advisory Board on Radiation and Worker Health.\n\n(a) Pursuant to Public Law 106-398, there is hereby established an Advisory Board on Radiation and Health (Advisory Board). The Advisory Board shall consist of no more than 20 members to be appointed by the President. Members shall include affected workers and their representatives, and representatives from scientific and medical communities. The President shall designate a Chair for the Board among its members.\n\n(b) The Advisory Board shall:\n\n(i) Advise the Secretary of Health and Human Services on the development of guidelines under section 2(b)(i) of this order;\n\n(ii) Advise the Secretary of Health and Human Services on the scientific validity and quality of dose reconstruction efforts performed for this Program; and\n\n(iii) Upon request by the Secretary of Health and Human Services, advise the Secretary on whether there is a class of employees at any Department of Energy facility who were exposed to radiation but for whom it is not feasible to estimate their radiation dose, and on whether there is a reasonable likelihood that such radiation dose may have endangered the health of members of the class.\n\nSec. 5. Reporting Requirements. The Secretaries of Labor, Health and Human Services, and Energy shall, as part of their annual budget submissions, report to the Office of Management and Budget (OMB) on their activities under this Program, including total expenditures related to benefits and program administration. They shall also report to the OMB, no later than March 1, 2001, on the manner in which they will carry out their respective responsibilities under the Act and this order. This report shall include, among other things, a description of the administrative structure established within their agencies to implement the Act and this order. In addition, the Secretary of Labor shall annually report on the total number and types of claims for which compensation was considered and other data pertinent to evaluating the Federal Government’s performance fulfilling the requirements of the Act and this order.\n\nSec. 6. Administration and Judicial Review. (a) This Executive Order shall be carried out subject to the availability of appropriations, and to the extent permitted by law.\n\n(b) This Executive Order does not create any right or benefit, substantive or procedural, enforceable at law or equity by a party against the United States, its agencies, its officers or employees, or any other person.\n\nWilliam J. Clinton.\n\n\n\nExtension of Term of Advisory Board on Radiation and Worker Health\n\n\nTerm of Advisory Board on Radiation and Worker Health extended until Sept. 30, 2023, by Ex. Ord. No. 14048, Sept. 30, 2021, 86 F.R. 55465, set out as a note under section 1013 of Title 5, Government Organization and Employees.\n\nPrevious extensions of term of Advisory Board on Radiation and Worker Health were contained in the following prior Executive Orders:\n\nEx. Ord. No. 13889, Sept. 27, 2019, 84 F.R. 52743, extended term until Sept. 30, 2021.\n\nEx. Ord. No. 13811, Sept. 29, 2017, 82 F.R. 46363, extended term until Sept. 30, 2019.\n\nEx. Ord. No. 13708, Sept. 30, 2015, 80 F.R. 60271, extended term until Sept. 30, 2017."}},{"id":"id:division:division::77a27668-adc1-4f48-967a-ee9e202e5300","relevance":0.2464762247814287,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::77a27668-adc1-4f48-967a-ee9e202e5300","id":"77a27668-adc1-4f48-967a-ee9e202e5300","jurisdiction":"FED","lawKey":"FED-USC","label":"section_15","path":"title_3.chapter_1.section_15","divisionType":"15","identifier":"15","name":"Counting electoral votes in Congress","plaintextContent":"(a) In General.-Congress shall be in session on the sixth day of January succeeding every meeting of the electors. The Senate and House of Representatives shall meet in the Hall of the House of Representatives at the hour of 1 o’clock in the afternoon on that day, and the President of the Senate shall be their presiding officer.(b) Powers of the President of Senate.-    (1) Ministerial in nature.-Except as otherwise provided in this chapter, the role of the President of the Senate while presiding over the joint session shall be limited to performing solely ministerial duties.    (2) Powers explicitly denied.-The President of the Senate shall have no power to solely determine, accept, reject, or otherwise adjudicate or resolve disputes over the proper certificate of ascertainment of appointment of electors, the validity of electors, or the votes of electors.(c) Appointment of Tellers.-At the joint session of the Senate and House of Representatives described in subsection (a), there shall be present two tellers previously appointed on the part of the Senate and two tellers previously appointed on the part of the House of Representatives by the presiding officers of the respective chambers.(d) Procedure at Joint Session Generally.-    (1) In general.-The President of the Senate shall-        (A) open the certificates and papers purporting to be certificates of the votes of electors appointed pursuant to a certificate of ascertainment of appointment of electors issued pursuant to section 5, in the alphabetical order of the States, beginning with the letter A; and        (B) upon opening any certificate, hand the certificate and any accompanying papers to the tellers, who shall read the same in the presence and hearing of the two Houses.    (2) Action on certificate.-        (A) In general.-Upon the reading of each certificate or paper, the President of the Senate shall call for objections, if any.        (B) Requirements for objections or questions.-            (i) Objections.-No objection or other question arising in the matter shall be in order unless the objection or question- (I) is made in writing;                (II) is signed by at least one-fifth of the Senators duly chosen and sworn and one-fifth of the Members of the House of Representatives duly chosen and sworn; and                (III) in the case of an objection, states clearly and concisely, without argument, one of the grounds listed under clause (ii).            (ii) Grounds for objections.-The only grounds for objections shall be as follows: (I) The electors of the State were not lawfully certified under a certificate of ascertainment of appointment of electors according to section 5(a)(1).                (II) The vote of one or more electors has not been regularly given.        (C) Consideration of objections and questions.-            (i) In general.-When all objections so made to any vote or paper from a State, or other question arising in the matter, shall have been received and read, the Senate shall thereupon withdraw, and such objections and questions shall be submitted to the Senate for its decision; and the Speaker of the House of Representatives shall, in like manner, submit such objections and questions to the House of Representatives for its decision.            (ii) Determination.-No objection or any other question arising in the matter may be sustained unless such objection or question is sustained by separate concurring votes of each House.        (D) Reconvening.-When the two Houses have voted, they shall immediately again meet, and the presiding officer shall then announce the decision of the questions submitted. No vote or paper from any other State shall be acted upon until the objections previously made to any vote or paper from any State, and other questions arising in the matter, shall have been finally disposed of.(e) Rules for Tabulating Votes.-    (1) Counting of votes.-        (A) In general.-Except as provided in subparagraph (B)-            (i) only the votes of electors who have been appointed under a certificate of ascertainment of appointment of electors issued pursuant to section 5, or who have legally been appointed to fill a vacancy of any such elector pursuant to section 4, may be counted; and            (ii) no vote of an elector described in clause (i) which has been regularly given shall be rejected.        (B) Exception.-The vote of an elector who has been appointed under a certificate of ascertainment of appointment of electors issued pursuant to section 5 shall not be counted if-            (i) there is an objection which meets the requirements of subsection (d)(2)(B)(i); and            (ii) each House affirmatively sustains the objection as valid.    (2) Determination of majority.-If the number of electors lawfully appointed by any State pursuant to a certificate of ascertainment of appointment of electors that is issued under section 5 is fewer than the number of electors to which the State is entitled under section 3, or if an objection the grounds for which are described in subsection (d)(2)(B)(ii)(I) has been sustained, the total number of electors appointed for the purpose of determining a majority of the whole number of electors appointed as required by the Twelfth Amendment to the Constitution shall be reduced by the number of electors whom the State has failed to appoint or as to whom the objection was sustained.    (3) List of votes by tellers; declaration of winner.-The tellers shall make a list of the votes as they shall appear from the said certificates; and the votes having been ascertained and counted according to the rules in this subchapter provided, the result of the same shall be delivered to the President of the Senate, who shall thereupon announce the state of the vote, which announcement shall be deemed a sufficient declaration of the persons, if any, elected President and Vice President of the United States, and, together with a list of the votes, be entered on the Journals of the two Houses.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title3-section15&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(June 25, 1948, ch. 644, 62 Stat. 675; Pub. L. 117-328, div. P, title I, § 109(a), Dec. 29, 2022, 136 Stat. 5237.)\n\nEditorial Notes\n\nAmendments\n\n2022-Pub. L. 117-328 amended section generally. Prior to amendment, section related to counting electoral votes in Congress.\n\nStatutory Notes and Related Subsidiaries\n\nCounting of Electoral Votes\n2013-Pub. L. 112-228, § 1, Dec. 28, 2012, 126 Stat. 1610, provided that: “The meeting of the Senate and House of Representatives to be held in January 2013 pursuant to section 15 of title 3, United States Code, to count the electoral votes for President and Vice President cast by the electors in December 2012 shall be held on January 4, 2013 (rather than on the date specified in the first sentence of that section).”\n\n2009-Pub. L. 110-430, § 2, Oct. 15, 2008, 122 Stat. 4846, provided that: “The meeting of the Senate and House of Representatives to be held in January 2009 pursuant to section 15 of title 3, United States Code, to count the electoral votes for President and Vice President cast by the electors in December 2008 shall be held on January 8, 2009 (rather than on the date specified in the first sentence of that section).”\n\n1997-Pub. L. 104-296, § 2, Oct. 11, 1996, 110 Stat. 3558, provided that: “The meeting of the Senate and House of Representatives to be held in January 1997 pursuant to section 15 of title 3, United States Code, to count the electoral votes for President and Vice President cast by the electors in December 1996 shall be held on January 9, 1997 (rather than on the date specified in the first sentence of that section).”\n\n1989-Pub. L. 100-646, Nov. 9, 1988, 102 Stat. 3341, provided: “That in carrying out the procedure set forth in section 15 of title, 3, United States Code, for 1989, ‘the fourth day of January’ shall be substituted for ‘the sixth day of January’ in the first sentence of such section.”\n\n1985-Pub. L. 98-456, Oct. 9, 1984, 98 Stat. 1748, provided: “That, in carrying out the procedure set forth in section 15 of title 3, United States Code, for 1985, ‘the seventh day of January’ shall be substituted for ‘the sixth day of January’ in the first sentence of such section.”"}},{"id":"id:division:division::0c2a2e8c-5f4f-44f5-af4d-76c2f68baa2b","relevance":0.24647621585693466,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::0c2a2e8c-5f4f-44f5-af4d-76c2f68baa2b","id":"0c2a2e8c-5f4f-44f5-af4d-76c2f68baa2b","jurisdiction":"FED","lawKey":"FED-CFR","label":"section_5e_274_8","path":"title_26.chapter_i.subchapter_a.part_5e.section_5e_274_8","divisionType":"5e.274-8","identifier":"5e.274-8","name":"Travel expenses of Members of Congress","plaintextContent":"(a) In general. Members of Congress (including any Delegate and Resident Commissioner) who are away from home within the meaning of section 162 (a), in the Washington, DC area, may elect in accordance with paragraph (f) of this section to deduct an amount described in paragraph (c) of this section as living expenses, without substantiation. A Member who elects under this section may not deduct any amount for the living expenses described in paragraph (b). A Member who does not make an election under this section must substantiate his expenses for living in Washington, DC in accordance with section 274 and § 1.274-5.(b) Living expenses covered. The amount allowed to be deducted without substantiation, pursuant to this section, for costs incurred for living in the Washington, DC area represents amounts expended for meals, lodging, and other incidental expenses. Meals include the actual cost of the food and expenses incident to the preparation and serving thereof. Lodging includes amounts paid for rent, care of premises, utilities, insurance and depreciation of household furnishings owned by the Member. In the case of a Member who lives in a residence owned by him in the Washington, DC area, the cost of lodging also includes depreciation on such residence. Other incidental expenses include laundry, cleaning, and local transportation. Local transportation includes travel within a 50 mile radius of Washington, DC, whether by private automobile, taxicab or other transportation for hire. Interest and taxes on personal property will not be considered expenses to be included within this paragraph.(c)     (1) Amounts allowed without substantiation. The amount that may be deducted pursuant to section 162 and these regulations is an amount equal to the product of the number of Congressional days in the taxable year, multiplied by the designated amount. The designated amount is-        (i) In the case of a Member who deducts interest and taxes attributable to the ownership of a personal residence in the Washington, DC area, two-thirds of the maximum amount of actual subsistence for Washington, DC payable pursuant to 5 U.S.C. 5702(c), or        (ii) In the case of a Member not described in paragraph (c)(1)(i), the maximum amount of actual subsistence for Washington, DC payable pursuant to 5 U.S.C. 5702(c).    A Member who incurs interest and taxes on his residence in the Washington, DC area may forego the deduction of such amounts and use the designated amount prescribed by paragraph (c)(1)(ii).    (2) If a Member, who lives in a residence owned by him in the Washington, DC area, chooses to deduct amounts prescribed in paragraph (c)(1) of this section, the Member must treat as an adjustment to the basis of such residence an amount equal to 20 percent of the maximum amount of actual subsistence multiplied by the number of Congressional days. Such adjustments will be considered a proper adjustment for exhaustion, wear, and tear under this subtitle.(d) Congressional days. The number of Congressional days with respect to a Member is the number of days in the taxable year less the number of days in periods in which the Member's Congressional chamber was not in session for 5 consecutive days or more (including Saturday and Sunday). The number of days with respect to a Member is determined without regard to whether or not the Member was in the Washington, DC area on such days. https://storage.googleapis.com/openregs-cloud-spiders-attachments/fed/regulations/fed-cfr/title_26/chapter_i/subchapter_a/part_5e/image_0_0ea7d216fd301fc2c375f2b5cd19d683.png(e) Other deductible amounts. This section does not preclude the deduction of otherwise allowable expenses for travel fares (other than local travel in the Washington, DC), long distance telephone and telegraph, and travel expenses incurred other than in the Washington, DC area. However, such expenses are subject to the substantiation requirements of section 274.(f) Election. To elect to deduct the amounts prescribed by this section, a Member must attach to his return for the taxable year a statement indicating,    (1) that the deduction for travel expenses while living in the Washington, DC area are computed pursuant to § 5e.274-8, and    (2) whether a separate deduction is being taken for interest and taxes paid or incurred with respect to the personal residence of the Member if in the Washington, DC area.(g) Effective date. This section is effective for taxable year beginning after December 31, 1980.(h) Examples. The following examples are based on a calendar from a Final Edition of the Calendar of the United States, House of Representatives and History of Legislation. The marked days indicate days the House of Representatives was in session.Example 1.In determining the number of Congressional days for 198X for which the designated amount may be computed, the number of days in such year is reduced by 125 days determined as follows: DaysFeb. 14–18 5Apr. 3–14 12May 23–27 5July 3–20 18Aug. 2–17 16Aug. 29–Sept. 2 5Oct. 3–Nov. 11 40Nov. 22–Nov. 30 9Dec. 17–Dec. 31 15Total 125Thus for 198X (a leap year) a typical Member of the House of Representatives will have 241 (366-125) Congressional days.Example 2.On August 1, Z a calendar year taxpayer is elected to the Congress to fill the unexpired term of Member Y. In determining the number of Congressional days, Z may only consider the number of days during the year for which he was a Member of Congress. For Z the number of Congressional days is 68.Example 3.Member X, a calendar year taxpayer, owns his own home in Washington, DC, where he lives with his family. While in Washington, DC, Member X is away from home within the meaning of section 162(a). X maintains no records attributable to his expenses in Washington, DC X has been a Member of Congress for the entire year. The maximum amount of subsistence for Washington, DC for 198X is $75. X may deduct for 198X $18,075 (241 days × $75) attributable to expenses while away from home in Washington, DC. Even if X maintained records as to living expenses in Washington, DC, X may choose to deduct $18,075 as the total amount attributable to living expenses in Washington, DC. If X deducts $18,075 X may not deduct any interest and taxes under section 163 or 164 attributable to the residence in Washington, DC.Example 4.Member C, a calendar year taxpayer owns his own home in Washington, DC, where he lives with his family. While in Washington, DC. Member C is away from home within the meaning of section 162(a). C can establish that he paid $12,000 as interest on a mortgage and $3,000 in local real estate taxes. C has been a Member of Congress for the entire year. C may choose to deduct $12,050 (241 days × [^ 2⁄3 × $75]) attributable to expenses in Washington, DC. Further, C may deduct under sections 163 and 164 $12,000 of interest and $3,000 of taxes respectively.Example 5.Assume the same facts as in Example (4). In addition, on March 15, 16, and 17, Member C travels to New York City to deliver a speech for which he receives an honorarium which he includes in income. C receives no additional amounts for travel reimbursement. While in New York City C incurs $350 for 3 nights lodging at a hotel and $150 for meals. In addition to the amounts deductible pursuant to this section, C may deduct the $500 as a travel expenses. Such deduction is subject to the substantiation rules of section 274.Example 6.Assume the same facts as example (5). Member C receives, in addition to the honorarium, $600 reimbursement for travel expenses. C must include the $600 in income and may deduct the travel expenses he incurred.","sourceUrl":"https://ecfr.federalregister.gov/current/title-26/section-5e.274-8","isRepealed":false,"isReserved":false,"retrievalDate":20240208,"annotations":"[T.D. 7802, 47 FR 2987, Jan. 21, 1982; 47 FR 4680, Feb. 2, 1982]"}},{"id":"id:division:division::c4491c5a-4b2a-4c4e-a023-de473761463e","relevance":0.2450250113114603,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::c4491c5a-4b2a-4c4e-a023-de473761463e","id":"c4491c5a-4b2a-4c4e-a023-de473761463e","jurisdiction":"FED","lawKey":"FED-USC","label":"section_3173","path":"title_16.chapter_51.subchapter_iv.section_3173","divisionType":"3173","identifier":"3173","name":"Stikine River region; Presidential study and report to Congress","plaintextContent":"Congress finds that there is a need to study the effect of this Act upon the ability of the Government of Canada to obtain access in the Stikine River region of southeast Alaska. Accordingly, within five years from December 2, 1980, the President shall consult with the Government of Canada and shall submit a report to the Congress containing his findings and recommendations concerning the need, if any, to provide for such access. Such report shall include, among other things, an analysis of the need for access and the social, environmental and economic impacts which may result from various forms of access including, but not limited to, a road along the Stikine and Iskut Rivers, or other alternative routes, should such access be permitted.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title16-section3173&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Pub. L. 96-487, title XI, § 1113, Dec. 2, 1980, 94 Stat. 2466.)\n\nEditorial Notes\n\n\nReferences in Text\n\nThis Act, referred to in text, is Pub. L. 96-487, Dec. 2, 1980, 94 Stat. 2466, known as the Alaska National Interest Lands Conservation Act. For complete classification of this Act to the Code, see Short Title note set out under section 3101 of this title and Tables."}},{"id":"id:division:division::8b2d511e-8bd0-4fe5-9ea1-59892c264163","relevance":0.2397580814287208,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::8b2d511e-8bd0-4fe5-9ea1-59892c264163","id":"8b2d511e-8bd0-4fe5-9ea1-59892c264163","jurisdiction":"FED","lawKey":"FED-USC","label":"section_185","path":"title_2.chapter_5.section_185","divisionType":"185","identifier":"185","name":"Inspector General of the Library of Congress","plaintextContent":"(a) Short titleThis section may be cited as the “Library of Congress Inspector General Act of 2005”.(b) Office of Inspector GeneralThere is an Office of Inspector General within the Library of Congress which is an independent objective office to-    (1) conduct and supervise audits and investigations (excluding incidents involving violence and personal property) relating to the Library of Congress, except that nothing in this paragraph may be construed to authorize the Inspector General to audit or investigate any operations or activities of the United States Capitol Police;    (2) provide leadership and coordination and recommend policies to promote economy, efficiency, and effectiveness; and    (3) provide a means of keeping the Librarian of Congress and the Congress fully and currently informed about problems and deficiencies relating to the administration and operations of the Library of Congress.(c) Appointment of Inspector General; supervision; removal; pay; limits on bonuses; counsel    (1) Appointment and supervision        (A) In generalThere shall be at the head of the Office of Inspector General, an Inspector General who shall be appointed by the Librarian of Congress without regard to political affiliation and solely on the basis of integrity and demonstrated ability in accounting, auditing, financial analysis, law, management analysis, public administration, or investigations. The Inspector General shall report to, and be under the general supervision of, the Librarian of Congress.        (B) Audits, investigations, and reportsThe Librarian of Congress shall have no authority to prevent or prohibit the Inspector General from-            (i) initiating, carrying out, or completing any audit or investigation;            (ii) issuing any subpoena during the course of any audit or investigation; or            (iii) issuing any report.    (2) Removal or transfer        (A) In generalThe Inspector General may be removed from office, or transferred to another position within, or another location of, the Library of Congress, by the Librarian of Congress.        (B) NoticeNot later than 30 days before the Librarian of Congress removes or transfers the Inspector General under subparagraph (A), the Librarian of Congress shall communicate in writing the reason for the removal or transfer to-            (i) the Committee on House Administration and the Committee on Appropriations of the House of Representatives; and            (ii) the Committee on Rules and Administration and the Committee on Appropriations of the Senate.        (C) ApplicabilityNothing in this paragraph shall prohibit a personnel action (except for removal or transfer) that is otherwise authorized by law.    (3) Pay        (A) In generalThe position of Inspector General shall-            (i) be classified as a position above GS-15 in accordance with section 5108 of title 5; and            (ii) have a rate of basic pay that is not less than the average rate of basic pay of all other employees in positions classified as above GS-15 of the Library of Congress calculated on an annual basis.        (B) AdjustmentsThe Librarian of Congress shall establish the amount of the annual adjustment in the rate of basic pay for the Inspector General in an amount equal to the average of the annual adjustments in the rate of basic pay provided to all other employees in positions classified as above GS-15 of the Library of Congress, in a manner consistent with section 5376 of title 5.    (4) No bonusesThe Inspector General may not receive any cash award or cash bonus, including a cash award under chapter 45 of title 5.    (5) CounselThe Inspector General shall, in accordance with applicable laws and regulations governing selections, appointments, and employment at the Library of Congress, obtain legal advice from a counsel reporting directly to the Inspector General or another Inspector General.(d) Duties, responsibilities, authority, and reports    (1) In generalSections 404, 405 (other than subsection (b)(13)), 406(a) (other than paragraphs (7) and (8) thereof),¹ and 407 of title 5 shall apply to the Inspector General of the Library of Congress and the Office of such Inspector General and such sections shall be applied to the Library of Congress and the Librarian of Congress by substituting-        (A) “Library of Congress” for “establishment”; and        (B) “Librarian of Congress” for “head of the establishment”.    (2) Employees        (A) In generalThe Inspector General, in carrying out the provisions of this section, is authorized, without the supervision or approval of any other employee, office, or other entity within the Library of Congress, to select, appoint, and employ such officers and employees (including consultants) as may be necessary for carrying out the functions, powers, and duties of the Office of Inspector General subject to the provisions of law governing selections, appointments, and employment in the Library of Congress.        (B) Security and suitabilityAppointments under the authority under subparagraph (A) shall be made consistent with personnel security and suitability requirements.        (C) ConsultantsAny appointment of a consultant under the authority under subparagraph (A) shall be made consistent with section 6(a)(8) of the Inspector General Act of 1978 (5 U.S.C. App.).1    (3) Law enforcement authority        (A) In generalSubject to subparagraph (B), any supervisory special agent under the Inspector General and any special agent supervised by such a supervisory special agent is authorized to-            (i) make an arrest without a warrant while engaged in official duties as authorized under this section or any other statute for any offense against the United States committed in the presence of such supervisory special agent or special agent, or for any felony cognizable under the laws of the United States if such supervisory special agent or special agent has reasonable grounds to believe that the person to be arrested has committed or is committing such felony;            (ii) seek and execute warrants for arrest, search of a premises, or seizure of evidence issued under the authority of the United States upon probable cause to believe that a violation has been committed; and            (iii) carry a firearm while engaged in official duties as authorized under this section or any other statute.        (B) Requirements to exercise authority            (i) Required certification (I) In generalIn order to exercise the authority under subparagraph (A), a supervisory special agent or a special agent supervised by such a supervisory special agent shall certify that he or she- (aa) is a citizen of the United States;                (bb) has successfully completed a basic law enforcement training program or military or other equivalent; and                (cc) is not prohibited from receiving a firearm under Federal law, including under section 922(g)(9) of title 18, because of a conviction of a misdemeanor crime of domestic violence.                    (II) Additional requirements After providing notice to the appropriate committees of Congress, the Inspector General may add requirements to the certification required under subclause (I), as determined appropriate by the Inspector General.            (ii) Maintenance of requirements The Inspector General shall maintain firearms-related requirements (including quarterly firearms qualifications) and use of force training requirements that, except to the extent the Inspector General determines necessary to effectively carry out the duties of the Office of the Inspector General, are in accordance with the Council of the Inspectors General on Integrity and Efficiency use of force policies, which incorporate Department of Justice guidelines.            (iii) Eligibility determination (I) In generalThe Inspector General shall- (aa) determine whether an individual meets the requirements under this paragraph; and                (bb) revoke any authority granted to an individual under subparagraph (A) if the individual is not in compliance with the requirements of this paragraph.                    (II) Reauthorization The Inspector General may reauthorize an individual to exercise the authority granted under subparagraph (A) if the Inspector General determines the individual has achieved compliance with the requirements under this paragraph.                    (III) Limitation on appeal A revocation of the authority granted under subparagraph (A) shall not be subject to administrative, judicial, or other review, unless the revocation results in an adverse action. Such an adverse action may, at the election of the applicable individual, be reviewed in accordance with the otherwise applicable procedures.        (C) Semiannual certification of program            (i) In general Before the first grant of authority under subparagraph (A), and semiannually thereafter as part of the report under section 5 of the Inspector General Act of 1978 (5 U.S.C. App.),1 the Inspector General shall submit to the appropriate committees of Congress a written certification that adequate internal safeguards and management procedures exist that, except to the extent the Inspector General determines necessary to effectively carry out the duties of the Office of the Inspector General, are in compliance with standards established by the Council of the Inspectors General on Integrity and Efficiency, which incorporate Department of Justice guidelines, to ensure proper exercise of the powers authorized under this paragraph.            (ii) Suspension of authority The authority granted under this paragraph (including any grant of authority to an individual under subparagraph (A), without regard to whether the individual is in compliance with subparagraph (B)) may be suspended by the Inspector General if the Office of Inspector General fails to comply with the reporting and review requirements under clause (i) of this subparagraph or subparagraph (D). Any suspension of authority under this clause shall be reported to the appropriate committees of Congress.        (D) Peer reviewTo ensure the proper exercise of the law enforcement powers authorized under this paragraph, the Office of Inspector General shall submit to and participate in the external review process established by the Council of the Inspectors General on Integrity and Efficiency for ensuring that adequate internal safeguards and management procedures continue to exist. Under the review process, the exercise of the law enforcement powers by the Office of Inspector General shall be reviewed periodically by another Office of Inspector General or by a committee of Inspectors General. The results of each review shall be communicated in writing to the Inspector General, the Council of the Inspectors General on Integrity and Efficiency, and the appropriate committees of Congress.        (E) Alleged misconductAny allegation of misconduct by an individual granted authority under subparagraph (A) may be reviewed by the Integrity Committee of the Council of the Inspectors General on Integrity and Efficiency.        (F) Appropriate committees of CongressIn this paragraph, the term “appropriate committees of Congress” means-            (i) the Committee on Rules and Administration and the Committee on Appropriations of the Senate; and            (ii) the Committee on House Administration and the Committee on Appropriations of the House of Representatives.    (4) Budget independenceThe Librarian of Congress shall include the annual budget request of the Inspector General in the budget of the Library of Congress without change.(e) TransfersAll functions, personnel, and budget resources of the Office of Investigations of the Library of Congress are transferred to the Office of Inspector General.(f) IncumbentThe individual who serves in the position of Inspector General of the Library of Congress on August 2, 2005, shall continue to serve in that position, subject to removal in accordance with this section.(g) ReferencesReferences in any other Federal law, Executive order, rule, regulation, or delegation of authority, or any document of or relating to the Inspector General of the Library of Congress shall be deemed to refer to the Inspector General of the Library of Congress as set forth under this section.(h) Effective dateThis section shall be effective on August 2, 2005.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title2-section185&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Pub. L. 109-55, title I, § 1307, Aug. 2, 2005, 119 Stat. 583; Pub. L. 110-161, div. H, title I, § 1004(d)(3), Dec. 26, 2007, 121 Stat. 2234; Pub. L. 110-178, § 4(c), Jan. 7, 2008, 121 Stat. 2552; Pub. L. 111-145, § 6(d)(1), Mar. 4, 2010, 124 Stat. 54; Pub. L. 116-94, div. P, title XVI, §§ 1602(a), 1603(a), 1604(a)(1), 1605(a), Dec. 20, 2019, 133 Stat. 3209, 3212, 3218, 3219; Pub. L. 117-286, § 4(b)(1), Dec. 27, 2022, 136 Stat. 4342.)\n\n\nFootnotes\n\n1. See References in Text note below.\n\nEditorial Notes\n\n\nReferences in Text\n\nSection 406(a) (other than paragraphs (7) and (8) thereof) of title 5, referred to in subsec. (d)(1), probably should be a reference to section “406 (other than subsection (a)(7))” of title 5. Pub. L. 116-94, § 1602(a)(2), had amended subsec. (d)(1) by substituting a reference to section “6 (other than subsection (a)(7))” of the Inspector General Act of 1978 for a reference to section “6(a) (other than paragraphs (7) and (8) thereof)” of that Act. The reference was subsequently amended by Pub. L. 117-286 to reflect the repeal of section 6 of the Act and its restatement as section 406 of title 5, but that amendment was based on the text as it existed prior to the amendment by Pub. L. 116-94. See 2019 and 2022 Amendment notes below.\n\nSections 5 and 6(a)(8) of the Inspector General Act of 1978, referred to in subsec. (d)(2)(C), (3)(C)(i), are sections 5 and 6(a)(8) of Pub. L. 95-452, which were set out in the Appendix to Title 5, Government Organization and Employees, and were repealed and restated as sections 405 and 406(a)(8), respectively, of Title 5 by Pub. L. 117-286, §§ 3(b), 7, Dec. 27, 2022, 136 Stat. 4212, 4219, 4361.\n\nCodification\n\n\nSection is from the Legislative Branch Appropriations Act, 2006.\n\nAmendments\n\n2022-Subsec. (d)(1). Pub. L. 117-286, which directed the substitution of “Sections 404, 405 (other than subsection (b)(13)), 406(a) (other than paragraphs (7) and (8) thereof), and 407 of title 5” for “Sections 4, 5 (other than subsections (a)(13)), 6(a) (other than paragraphs (7) and (8) thereof), and 7 of the Inspector General Act of 1978 (5 U.S.C. App.)”, was executed by making the substitution for “Sections 4, 5 (other than subsection (a)(13)), 6 (other than subsection (a)(7)), and 7 of the Inspector General Act of 1978 (5 U.S.C. App.)” to reflect the probable intent of Congress and the prior amendment by Pub. L. 116-94, § 1602(a)(2). See 2019 Amendment note below.\n\n2019-Subsec. (c). Pub. L. 116-94, § 1602(a)(1)(A), inserted “; pay; limits on bonuses; counsel” after “removal” in heading.\n\nSubsec. (c)(2). Pub. L. 116-94, § 1602(a)(1)(B), added par. (2) and struck out former par. (2). Prior to amendment, text read as follows: “The Inspector General may be removed from office by the Librarian of Congress. The Librarian of Congress shall, promptly upon such removal, communicate in writing the reasons for any such removal to each House of the Congress.”\n\nSubsec. (c)(3) to (5). Pub. L. 116-94, § 1602(a)(1)(C), added pars. (3) to (5).\n\nSubsec. (d)(1). Pub. L. 116-94, § 1602(a)(2), substituted “Sections 4, 5 (other than subsection (a)(13)), 6 (other than subsection (a)(7)), and 7” for “Sections 4, 5 (other than subsections (a)(13)), 6(a) (other than paragraphs (7) and (8) thereof), and 7”.\n\nSubsec. (d)(2). Pub. L. 116-94, § 1605(a), designated existing provisions as subpar. (A), inserted subpar. heading and “, without the supervision or approval of any other employee, office, or other entity within the Library of Congress,” after “is authorized”, and added subpars. (B) and (C).\n\nSubsec. (d)(3). Pub. L. 116-94, § 1603(a), added par. (3).\n\nSubsec. (d)(4). Pub. L. 116-94, § 1604(a)(1), added par. (4).\n\n2010-Subsec. (b)(1). Pub. L. 111-145 repealed Pub. L. 110-161, § 1004(d)(3). See 2007 Amendment note below.\n\n2008-Subsec. (b)(1). Pub. L. 110-178 inserted “, except that nothing in this paragraph may be construed to authorize the Inspector General to audit or investigate any operations or activities of the United States Capitol Police” before semicolon at end.\n\n2007-Subsec. (b)(1). Pub. L. 110-161, § 1004(d)(3), which made amendment identical to that made by Pub. L. 110-178, was repealed by Pub. L. 111-145. See Effective Date of 2010 Amendment note below.\n\nStatutory Notes and Related Subsidiaries\n\nEffective Date of 2010 Amendment\n\nRepeal of section 1004 of Pub. L. 110-161 by Pub. L. 111-145 effective as if included in the enactment of Pub. L. 110-161 and provisions amended by section 1004 of Pub. L. 110-161 to be restored as if such section had not been enacted, and repeal to have no effect on the enactment or implementation of any provision of Pub. L. 110-178, see section 6(d) of Pub. L. 111-145, set out as a note under section 1901 of this title.\n\nEffective Date of 2008 Amendment\n\nAmendment by Pub. L. 110-178 effective Oct. 1, 2009, see section 4(d) of Pub. L. 110-178, set out as an Effective Date of Repeal note under former section 167 of this title."}},{"id":"id:division:division::a1e820c5-1c34-4bc0-ad83-5562721df74b","relevance":0.23967161012009508,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::a1e820c5-1c34-4bc0-ad83-5562721df74b","id":"a1e820c5-1c34-4bc0-ad83-5562721df74b","jurisdiction":"FED","lawKey":"FED-USC","label":"section_3210","path":"title_39.part_iv.chapter_32.section_3210","divisionType":"3210","identifier":"3210","name":"Franked mail transmitted by the Vice President, Members of Congress, and congressional officials","plaintextContent":"(a)     (1) It is the policy of the Congress that the privilege of sending mail as franked mail shall be established under this section in order to assist and expedite the conduct of the official business, activities, and duties of the Congress of the United States.    (2) It is the intent of the Congress that such official business, activities, and duties cover all matters which directly or indirectly pertain to the legislative process or to any congressional representative functions generally, or to the functioning, working, or operating of the Congress and the performance of official duties in connection therewith, and shall include, but not be limited to, the conveying of information to the public, and the requesting of the views of the public, or the views and information of other authority of government, as a guide or a means of assistance in the performance of those functions.    (3) It is the intent of the Congress that mail matter which is frankable specifically includes, but is not limited to-        (A) mail matter to any person and to all agencies and officials of Federal, State, and local governments regarding programs, decisions, and other related matters of public concern or public service, including any matter relating to actions of a past or current Congress;        (B) the usual and customary congressional newsletter or press release which may deal with such matters as the impact of laws and decisions on State and local governments and individual citizens; reports on public and official actions taken by Members of Congress; and discussions of proposed or pending legislation or governmental actions and the positions of the Members of Congress on, and arguments for or against, such matters;        (C) the usual and customary congressional questionnaire seeking public opinion on any law, pending or proposed legislation, public issue, or subject;        (D) mail matter dispatched by a Member of Congress between his Washington office and any congressional district offices, or between his district offices;        (E) mail matter directed by one Member of Congress to another Member of Congress or to representatives of the legislative bodies of State and local governments;        (F) mail matter expressing congratulations;        (G) mail matter, including general mass mailings, which consists of Federal laws, Federal regulations, other Federal publications, publications purchased with Federal funds, or publications containing items of general information;        (H) mail matter which consists of voter registration or election information or assistance prepared and mailed in a nonpartisan manner; or        (I) mail matter which constitutes or includes a biography or autobiography of any Member of, or Member-elect to, Congress or any biographical or autobiographical material concerning such Member or Member-elect or the spouse or other members of the family of such Member or Member-elect, and which is so mailed as a part of a Federal publication, in response to a specific request therefor, or which relates to the Member’s or Member-elect’s official and representational duties, and is not included for publicity purposes in a newsletter or other general mass mailing of the Member or Member-elect under the franking privilege.    (4) It is the intent of the Congress that the franking privilege under this section shall not permit, and may not be used for, the transmission through the mails as franked mail, of matter which in its nature is purely personal to the sender or to any other person and is unrelated to the official business, activities, and duties of the public officials covered by subsection (b)(1) of this section, except that nothing in this paragraph may be construed to prohibit the use of the franking privilege for the transmission of matter which is purely personal to a recipient who is a constituent of a Member of Congress and which is related to the official business, activities, and duties of the Member.    (5) It is the intent of the Congress that a Member of or Member-elect to Congress may not mail as franked mail-        (A) mail matter which constitutes or includes any article, account, sketch, narration, or other text laudatory and complimentary of any Member of, or Member-elect to, Congress on a purely personal or political basis rather than on the basis of performance of official duties as a Member or on the basis of activities as a Member-elect;        (B) mail matter which constitutes or includes-            (i) greetings from the spouse or other members of the family of such Member or Member-elect unless it is a brief reference in otherwise frankable mail;            (ii) reports of how or when such Member or Member-elect, or the spouse or any other member of the family of such Member or Member-elect, spends time other than in the performance of, or in connection with, the legislative, representative, and other official functions of such Member or the activities of such Member-elect as a Member-elect; or            (iii) any card expressing holiday greetings from such Member or Member-elect; or        (C) mail matter which specifically solicits political support for the sender or any other person or any political party, or a vote or financial assistance for any candidate for any public office.    The House Communications Standards Commission and the Select Committee on Standards and Conduct of the Senate shall prescribe for their respective Houses such rules and regulations and shall take such other action, as the Commission or Committee considers necessary and proper for the Members and Members-elect to conform to the provisions of this clause and applicable rules and regulations. Such rules and regulations shall include, but not be limited to, provisions prescribing the time within which such mailings shall be mailed at or delivered to any postal facility to attain compliance with this clause and the time when such mailings shall be deemed to have been so mailed or delivered and such compliance attained.    (6)         (A) It is the intent of Congress that a Member of, or Member-elect to, Congress may not mail any mass mailing as franked mail-            (i) if the mass mailing is postmarked fewer than 60 days immediately before the date of any primary election or general election (whether regular, special, or runoff) in which the Member is a candidate for reelection; or            (ii) in the case of a Member of, or Member-elect to, the House who is a candidate for any other public office, if the mass mailing- (I) is prepared for delivery within any portion of the jurisdiction of or the area covered by the public office which is outside the area constituting the congressional district from which the Member or Member-elect was elected; or                (II) is postmarked fewer than 60 days immediately before the date of any primary election or general election (whether regular, special, or runoff) in which the Member or Member-elect is a candidate for any other public office.        (B) Any mass mailing which is mailed by the chairman of any organization referred to in the last sentence of section 3215 of this title which relates to the normal and regular business of the organization may be mailed without regard to the provisions of this paragraph.        (C) No Member of the Senate may mail any mass mailing as franked mail if such mass mailing is postmarked fewer than 60 days immediately before the date of any primary election or general election (whether regular, special, or runoff) for any national, State or local office in which such Member is a candidate for election.        (D) The Select Committee on Ethics of the Senate and the House Communications Standards Commission shall prescribe for their respective Houses rules and regulations, and shall take other action as the Committee or the Commission considers necessary and proper for Members and Members-elect to comply with the provisions of this paragraph and applicable rules and regulations, and in the case of the Commission, to waive this paragraph in the case of mailings sent in response to or to address threats to life safety. The rules and regulations shall include provisions prescribing the time within which mailings shall be mailed at or delivered to any postal facility and the time when the mailings shall be deemed to have been mailed or delivered to comply with the provisions of this paragraph.        (E) As used in this section, the term “mass mailing” means, with respect to a session of Congress, any mailing of newsletters or other pieces of mail with substantially identical content (whether such mail is deposited singly or in bulk, or at the same time or different times), totaling more than 500 pieces in that session, except that such term does not include any mailing-            (i) of matter in direct response to a communication from a person to whom the matter is mailed;            (ii) from a Member of Congress to other Members of Congress, or to Federal, State, or local government officials;            (iii) of a news release to the communications media; or            (iv) providing information exclusively on competitions which are officially sanctioned by the House of Representatives or Senate, nominations to military service academies, official employment listings for positions in the House of Representatives (including listings for positions in the Wounded Warrior Program or the Gold Star Family Fellowship Program), or natural disasters or other threats to public health and life safety.        (F) For purposes of subparagraphs (A) and (C) if mail matter is of a type which is not customarily postmarked, the date on which such matter would have been postmarked if it were of a type customarily postmarked shall apply.    (7) A Member of the House of Representatives may not send any mass mailing outside the congressional district from which the Member was elected.(b)     (1) The Vice President, each Member of or Member-elect to Congress, the Secretary of the Senate, the Sergeant at Arms of the Senate, each of the elected officers of the House of Representatives (other than a Member of the House), the Legislative Counsels of the House of Representatives and the Senate, the Law Revision Counsel of the House of Representatives, and the Senate Legal Counsel, may send, as franked mail, matter relating to their official business, activities, and duties, as intended by Congress to be mailable as franked mail under subsection (a)(2) and (3) of this section.    (2) If a vacancy occurs in the Office of the Secretary of the Senate, the Sergeant at Arms of the Senate, an elected officer of the House of Representatives (other than a Member of the House), the Legislative Counsel of the House of Representatives or the Senate, the Law Revision Counsel of the House of Representatives, or the Senate Legal Counsel, any authorized person may exercise the franking privilege in the officer’s name during the period of the vacancy.    (3) The Vice President, each Member of Congress, the Secretary of the Senate, the Sergeant at Arms of the Senate, and each of the elected officers of the House (other than a Member of the House), during the 90-day period immediately following the date on which they leave office, may send, as franked mail, matter on official business relating to the closing of their respective offices. The House Communications Standards Commission and the Select Committee on Standards and Conduct of the Senate shall prescribe for their respective Houses such rules and regulations, and shall take such other action as the Commission or Committee considers necessary and proper, to carry out the provisions of this paragraph.(c) Franked mail may be in any form appropriate for mail matter, including, but not limited to, correspondence, newsletters, questionnaires, recordings, facsimiles, reprints, and reproductions. Franked mail shall not include matter which is intended by Congress to be nonmailable as franked mail under subsection (a)(4) and (5) of this section.(d)     (1) A Member of Congress may mail franked mail with a simplified form of address for delivery within that area constituting the congressional district or State from which the Member was elected.    (2) A Member-elect to the Congress may mail franked mail with a simplified form of address for delivery within that area constituting the congressional district or the State from which he was elected.    (3) A Delegate, Delegate-elect, Resident Commissioner, or Resident Commissioner-elect to the House of Representatives may mail franked mail with a simplified form of address for delivery within the area from which he was elected.    (4) Any franked mail which is mailed under this subsection shall be mailed at the equivalent rate of postage which assures that the mail will be sent by the most economical means practicable.    (5) The Senate Committee on Rules and Administration and the House Communications Standards Commission shall prescribe for their respective Houses rules and regulations governing any franked mail which is mailed under this subsection and shall by regulation limit the number of such mailings allowed under this subsection.    (6)         (A) Any Member of, or Member-elect to, the House of Representatives entitled to make any mailing as franked mail under this subsection shall, before making any mailing, submit a sample or description of the mail matter involved to the House Communications Standards Commission for an advisory opinion as to whether the proposed mailing is in compliance with the provisions of this subsection.        (B) The Senate Select Committee on Ethics may require any Member of, or Member-elect to, the Senate entitled to make any mailings as franked mail under this subsection to submit a sample or description of the mail matter to the Committee for an advisory opinion as to whether the proposed mailing is in compliance with the provisions of this subsection.    (7) Franked mail mailed with a simplified form of address under this subsection-        (A) shall be prepared as directed by the Postal Service; and        (B) may be delivered to-            (i) each box holder or family on a rural or star route;            (ii) each post office box holder; and            (iii) each stop or box on a city carrier route.    (8) For the purposes of this subsection, a congressional district includes, in the case of a Representative at Large or Representative at Large-elect, the State from which he was elected.(e) The frankability of mail matter shall be determined under the provisions of this section by the type and content of the mail sent, or to be sent.(f) Any mass mailing which otherwise would be permitted to be mailed as franked mail under this section shall not be so mailed unless the cost of preparing and printing the mail matter is paid exclusively from funds appropriated by Congress, except that an otherwise frankable mass mailing may contain, as an enclosure or supplement, any public service material which is purely instructional or informational in nature, and which in content is frank-able under this section.(g) Notwithstanding any other provision of Federal, State, or local law, or any regulation thereunder, the equivalent amount of postage determined under section 3216 of this title on franked mail mailed under the frank of the Vice President or a Member of Congress, and the cost of preparing or printing such frankable matter for such mailing under the frank, shall not be considered as a contribution to, or an expenditure by, the Vice President or a Member of Congress for the purpose of determining any limitation on expenditures or contributions with respect to any such official, imposed by any Federal, State, or local law or regulation, in connection with any campaign of such official for election to any Federal office.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title39-section3210&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Pub. L. 91-375, Aug. 12, 1970, 84 Stat. 754; Pub. L. 92-51, § 101, July 9, 1971, 85 Stat. 132; Pub. L. 93-191, § 1(a), Dec. 18, 1973, 87 Stat. 737; Pub. L. 94-177, Dec. 23, 1975, 89 Stat. 1032; Pub. L. 95-521, title VII, § 714(a), Oct. 26, 1978, 92 Stat. 1884; Pub. L. 97-69, §§ 1-3(a), 4, Oct. 26, 1981, 95 Stat. 1041-1043; Pub. L. 97-263, § 1(1), (2), Sept. 24, 1982, 96 Stat. 1132; Pub. L. 101-163, title III, § 318, Nov. 21, 1989, 103 Stat. 1067; Pub. L. 101-520, title III, §§ 311(h)(1), 316, Nov. 5, 1990, 104 Stat. 2280, 2283; Pub. L. 102-392, title III, § 309(a), Oct. 6, 1992, 106 Stat. 1722; Pub. L. 104-197, title I, § 102(a), Sept. 16, 1996, 110 Stat. 2401; Pub. L. 109-435, title X, § 1010(g)(4), Dec. 20, 2006, 120 Stat. 3262; Pub. L. 116-136, div. B, title IX, § 19006(a), Mar. 27, 2020, 134 Stat. 578; Pub. L. 116-260, div. I, title I, § 116(b)(2)(A)(i), (e)(1)-(5)(A), (6), Dec. 27, 2020, 134 Stat. 1637, 1640, 1641.)\n\nEditorial Notes\n\nAmendments\n\n2020-Subsec. (a)(3)(F). Pub. L. 116-260, § 116(e)(1), struck out “to a person who has achieved some public distinction” after “congratulations”.\n\nSubsec. (a)(3)(I). Pub. L. 116-260, § 116(e)(2), substituted “publication, in response to a specific request therefor, or which relates to the Member’s or Member-elect’s official and representational duties,” for “publication or in response to a specific request therefor”.\n\nSubsec. (a)(3)(J). Pub. L. 116-260, § 116(e)(3), struck out subpar. (J) which read as follows: “mail matter which contains a picture, sketch, or other likeness of any Member or Member-elect and which is so mailed as a part of a Federal publication or in response to a specific request therefor and, when contained in a newsletter or other general mass mailing of any Member or Member-elect, is not of such size, or does not occur with such frequency in the mail matter concerned, as to lead to the conclusion that the purpose of such picture, sketch, or likeness is to advertise the Member or Member-elect rather than to illustrate accompanying text.”\n\nSubsec. (a)(4). Pub. L. 116-260, § 116(e)(4), substituted “, except that nothing in this paragraph may be construed to prohibit the use of the franking privilege for the transmission of matter which is purely personal to a recipient who is a constituent of a Member of Congress and which is related to the official business, activities, and duties of the Member.” for period at end.\n\nSubsec. (a)(5). Pub. L. 116-260, § 116(b)(2)(A)(i), substituted “House Communications Standards Commission” for “House Commission on Congressional Mailing Standards” in concluding provisions.\n\nSubsec. (a)(6)(A)(i). Pub. L. 116-260, § 116(e)(5)(A)(i), struck out “(or, in the case of a Member of the House, fewer than 90 days)” after “60 days”.\n\nSubsec. (a)(6)(A)(ii)(II). Pub. L. 116-260, § 116(e)(5)(A)(ii), substituted “60 days” for “90 days”.\n\nSubsec. (a)(6)(D). Pub. L. 116-260, § 116(b)(2)(A)(i), substituted “House Communications Standards Commission” for “House Commission on Congressional Mailing Standards”.\n\nPub. L. 116-136 substituted “regulations, and in the case of the Commission, to waive this paragraph in the case of mailings sent in response to or to address threats to life safety.” for “regulations.”\n\nSubsec. (a)(6)(E)(iv). Pub. L. 116-260, § 116(e)(6), added cl. (iv).\n\nSubsec. (b)(3). Pub. L. 116-260, § 116(b)(2)(A)(i), substituted “House Communications Standards Commission” for “House Commission on Congressional Mailing Standards”.\n\nSubsec. (d)(5). Pub. L. 116-260, § 116(b)(2)(A)(i), substituted “House Communications Standards Commission” for “House Commission on Congressional Mailing Standards”.\n\nSubsec. (d)(6)(A). Pub. L. 116-260, § 116(b)(2)(A)(i), substituted “House Communications Standards Commission” for “House Commission on Congressional Mailing Standards”.\n\n2006-Subsec. (a)(6)(C). Pub. L. 109-435 substituted “is postmarked fewer” for “is mailed fewer”.\n\n1996-Subsec. (a)(6)(A)(i). Pub. L. 104-197, § 102(a)(1), inserted “(or, in the case of a Member of the House, fewer than 90 days)” after “60 days”.\n\nSubsec. (a)(6)(A)(ii)(II). Pub. L. 104-197, § 102(a)(2), substituted “90 days” for “60 days”.\n\n1992-Subsec. (a)(7). Pub. L. 102-392, § 309(a)(1), substituted “from which the Member was elected” for “of the Member, except that-\n\n\t“(A) a Member of the House of Representatives may send mass mailings to any area in a county, if any part of the county adjoins or is inside the congressional district of the Member; and\n\n\t“(B) in the case of redistricting, on and after the date referred to in subsection (d)(1)(B), a Member of the House of Representatives may send mass mailings to the additional area described in that section”.\n\nSubsec. (d)(1). Pub. L. 102-392, § 309(a)(2), struck out subpar. (A) designation, substituted “the Member” for “he” and a period for “; and”, and struck out subpar. (B) which read as follows: “with respect to a Member of the House of Representatives on and after the date on which the proposed redistricting of congressional districts in his State by legislative or judicial proceedings is initially completed (whether or not the redistricting is actually in effect), within any additional area of each congressional district proposed or established in such redistricting and containing all or part of the area constituting the congressional district from which he was elected, unless and until the congressional district so proposed or established is changed by legislative or judicial proceedings.”\n\n1990-Subsec. (a)(6)(E). Pub. L. 101-520, § 311(h)(1), amended subpar. (E) generally. Prior to amendment, subpar. (E) read as follows: “For purposes of this section, the term ‘mass mailing’ means newsletters and similar mailings of more than five hundred pieces in which the content of the matter mailed is substantially identical but shall not apply to mailings-\n\n\t“(i) which are in direct response to communications from persons to whom the matter is mailed;\n\n\t“(ii) to colleagues in the Congress or to government officials (whether Federal, State, or local); or\n\n\t“(iii) of news releases to the communications media.”\n\nSubsec. (a)(7). Pub. L. 101-520, § 316, added par. (7).\n\n1989-Subsec. (a)(6). Pub. L. 101-163, § 318(3), which directed the substitution of “is postmarked fewer” for “is mailed fewer” in subparagraph (c) of subsec. (a)(6) of this section, was not executed because subsec. (a)(6) does not have a subparagraph (c). See 2006 Amendment note above.\n\nSubsec. (a)(6)(A)(i), (ii)(II). Pub. L. 101-163, § 318(1), (2), substituted “is postmarked fewer” for “is mailed fewer”.\n\nSubsec. (a)(6)(F). Pub. L. 101-163, § 318(4), added subpar. (F).\n\n1982-Subsec. (b)(1), (2). Pub. L. 97-263 inserted reference to Law Revision Counsel of House of Representatives.\n\n1981-Subsec. (a)(3)(F). Pub. L. 97-69, § 1, struck out provision relating to mail matter expressing condolences to a person who has suffered a loss.\n\nSubsec. (a)(5). Pub. L. 97-69, § 2(a), inserted provision relating to brief references in otherwise frankable mail in subpar. (B)(i), and struck out subpar. (D) which related to mass mailing mailed at or delivered to any postal facility less than 28 days immediately before the date of any primary or general election in which the Member or Member-elect was a candidate for public office. See subsec. (a)(6) of this section.\n\nSubsec. (a)(6). Pub. L. 97-69, § 2(b), added par. (6).\n\nSubsec. (d). Pub. L. 97-69, § 3(a), substituted “Congress” for “the House” in provisions of par. (1) preceding subpar. (A), substituted “congressional district or State” for “congressional district” in par. (1)(A), inserted “with respect to a Member of the House of Representatives” after “(B)” in par. (1)(B), substituted “Congress” for “House of Representatives” and “congressional district or the State” for “congressional district” in par. (2), added pars. (4), (5), and (6), and redesignated former pars. (4) and (5) as (7) and (8), respectively.\n\nSubsec. (e). Pub. L. 97-69, § 4(a), struck out provisions under which the cost of preparing or printing mail matter which was frankable under this section could be paid from any funds, including but not limited to funds collected by a candidate or a political committee required to file reports of receipts and expenditures under the Federal Election Campaign Act of 1971 (Public Law 92-225), or from voluntary newsletter funds, or from similar funds administered or controlled by a Member or by a committee organized to administer such funds.\n\nSubsecs. (f), (g). Pub. L. 97-69, § 4(b), added subsec. (f) and redesignated former subsec. (f) as (g).\n\n1978-Subsec. (b)(1), (2). Pub. L. 95-521 inserted reference to Senate Legal Counsel.\n\n1975-Subsec. (b)(1). Pub. L. 94-177, § 1(a), struck out “and” before “each of the elected officers”, and “until the 1st day of April following the expiration of their respective terms of office” after “(other than a Member of the House)”.\n\nSubsec. (b)(3). Pub. L. 94-177, § 1(b), added par. (3).\n\n1973-Subsec. (a). Pub. L. 93-191 added subsec. (a). Former first sentence provided in part for franked mail (1) matter, not exceeding 4 pounds in weight, upon official or departmental business, to a Government official, and (2) correspondence, not exceeding 4 ounces in weight, upon official business to any person.\n\nSubsec. (b)(1). Pub. L. 93-191 incorporated part of former first sentence in provisions designated as subsec. (b)(1), substituted reference to elected officers of House of Representatives (other than a Member of House) for former references to Clerk of House of Representatives and the Sergeant at Arms of House of Representatives, included reference to Legislative Counsel of Senate, substituted the 1st day of April for the thirtieth day of June, and substituted internal reference to subsec. (a)(2) and (3) of this section for former provision respecting franked mail (1) matter, not exceeding 4 pounds in weight, upon official or departmental business, to a Government official, and (2) correspondence, not exceeding 4 ounces in weight, upon official business to any person.\n\nSubsec. (b)(2). Pub. L. 93-191 incorporated former second sentence in provisions designated as subsec. (b)(2), substituted provision respecting vacancy in Office of an elected officer of House of Representatives (other than a Member of House) for former provision respecting vacancy in office of Clerk of House of Representatives and Sergeant at Arms of House of Representatives and included provision for vacancy in Office of Legislative Counsel of Senate.\n\nSubsecs. (c) to (f). Pub. L. 93-191 added subsecs. (c) to (f).\n\n1971-Pub. L. 92-51 inserted reference to Legislative Counsel of House of Representatives.\n\nStatutory Notes and Related Subsidiaries\n\nEffective Date of 2020 Amendment\nPub. L. 116-260, div. I, title I, § 116(e)(5)(B), Dec. 27, 2020, 134 Stat. 1641, provided that: “The amendments made by paragraph (1) [probably should be “subparagraph (A)”, amending this section] shall apply with respect to the regularly scheduled general election for Federal office held in November 2020 and each succeeding election for public office.”\n\n\nAmendment by Pub. L. 116-260, except as provided in section 116(e)(5)(B) of div. I of Pub. L. 116-260, applicable with respect to communications disseminated on or after Dec. 27, 2020, see section 116(f) of div. I of Pub. L. 116-260, set out as a note under section 501 of Title 2, The Congress.\nPub. L. 116-136, div. B, title IX, § 19006(b), Mar. 27, 2020, 134 Stat. 579, provided that: “The amendments made by this subsection [probably should be “this section”, amending this section] shall apply with respect to mailings sent on or after the date of the enactment of this Act [Mar. 27, 2020].”\n\n\nEffective Date of 1996 Amendment\nPub. L. 104-197, title I, § 102(b), Sept. 16, 1996, 110 Stat. 2401, provided that: “The amendments made by subsection (a) [amending this section] shall take effect on October 1, 1996, and shall apply with respect to any mailing postmarked on or after that date.”\n\n\nEffective Date of 1992 Amendment\nPub. L. 102-392, title III, § 309(b), Oct. 6, 1992, 106 Stat. 1723, provided that: “The amendments made by subsection (a) [amending this section] shall take effect on the date of the enactment of this Act [Oct. 6, 1992].”\n\n\nEffective Date of 1990 Amendment\n\nAmendment by section 311(h)(1) of Pub. L. 101-520 applicable with respect to sessions of Congress beginning with the first session of the One Hundred Second Congress, see section 503(i) of Title 2, The Congress.\n\nEffective Date of 1981 Amendment\nPub. L. 97-69, § 3(b), Oct. 26, 1981, 95 Stat. 1042, provided that: “This section [amending this section] shall become effective 120 days after the date of enactment of this Act [Oct. 26, 1981].”\n\n\nEffective Date of 1978 Amendment\n\nAmendment by Pub. L. 95-521 effective Jan. 3, 1979, see section 717 of Pub. L. 95-521, set out as an Effective Date note under section 288 of Title 2, The Congress.\n\nEffective Date of 1973 Amendment\nPub. L. 93-191, § 14, Dec. 18, 1973, 87 Stat. 746, provided that:\n\n“(a) Except as provided in subsection (b) of this section, the provisions of this Act [enacting section 3219 of this title and sections 501 and 502 of Title 2, The Congress, amending this section, sections 3206, 3211, 3212, 3215, 3216, and 3218 of this title, and sections 733 and 907 of Title 44, Public Printing and Documents, and repealing section 277 of Title 2] shall become effective on the date of enactment of this Act [Dec. 18, 1973].\n\n\n“(b) The provisions of section 3214 of title 39, United States Code, as amended by section 4 of this Act; and the provisions of subsection (b) of section 3216 of title 39, United States Code, as amended by section 7 of this Act, shall take effect as of December 27, 1972.”\n\n\n\n\nEffective Date\n\nSection effective July 1, 1971, pursuant to Resolution No. 71-9 of the Board of Governors. See section 15(a) of Pub. L. 91-375, set out as a note preceding section 101 of this title.\n\nSeparability\nPub. L. 93-191, § 15, Dec. 18, 1973, 87 Stat. 746, provided that: “If a provision of this Act [enacting section 3219 of this title and sections 501 and 502 of Title 2, The Congress, amending this section, sections 3206, 3211, 3212, 3214 to 3216, and 3218 of this title, and sections 733 and 907 of Title 44, Public Printing and Documents, and repealing section 277 of Title 2] is held invalid, all valid provisions severable from the invalid provision remain in effect. If a provision of this Act is held invalid in one or more of its applications, such provision remains in effect in all valid applications severable from the invalid application or applications.”\n\n\nMass Mailings by Senators\nPub. L. 103-283, title I, §§ 5, 6, July 22, 1994, 108 Stat. 1427, provided that:\n“Sec. 5. Effective October 1, 1994, each of the figures contained in section 506(b)(3)(A)(iii) of the Supplemental Appropriations Act, 1973 (2 U.S.C. 58(b)(3)(A)(iii)) [now 2 U.S.C. 6314(b)(3)(A)(iii)] is increased by $50,000: Provided, That, in any fiscal year beginning with fiscal year 1995, a Senator may use funds provided for official office expenses, but not to exceed $50,000, for mass mailing, as defined in section 6(b)(1) and all such mass mailings shall be under the frank.\n\n“Sec. 6.\n (a) This section shall apply to mailings by Senators, made during fiscal year 1995 and each fiscal year thereafter in addition to any other law relating to the use of the franking privilege.\n\n\n“(b) For the purposes of this paragraph-\n\t“(1) the term ‘mass mailing’-\n\t\t“(A) means, with respect to a session of Congress, a mailing of more than 500 newsletters or other pieces of mail with substantially identical content (whether such mail is deposited singly or in bulk, or at the same time or different times), but\n\n\n\t\t“(B) does not include a mailing-\t\t\t“(i) of matter in direct response to a communication from a person to whom the matter is mailed;\n\n\t\t\t“(ii) to other Members of Congress or to a Federal, State, or local government official;\n\n\t\t\t“(iii) of a news release to the communications media;\n\n\t\t\t“(iv) of a town meeting notice, but no such mailing may be made fewer than 60 days immediately before the date of any primary election or general election (whether regular, special, or runoff) for any Federal, State, or local office in which a Member of the Senate is a candidate for election; or\n\n\t\t\t“(v) of a Federal publication or other item that is provided by the Senate to all Senators or made available by the Senate for purchase by all Senators from official funds specifically for distribution.\n\n\n\n\n\n“(c) Except as provided in section 5, a Senator may not mail a mass mailing under the frank.\n\n\n“(d) The Senate Committee on Rules and Administration shall prescribe rules and regulations and take other action as the Committee considers necessary and proper for Senators to comply with this section and regulations.”\n\n\n\n\nPub. L. 101-163, § 316(a), formerly § 316(a), (b), as renumbered and amended by Pub. L. 101-520, title III, § 311(h)(3), Nov. 5, 1990, 104 Stat. 2280; Pub. L. 102-392, title III, § 308(a), Oct. 6, 1992, 106 Stat. 1722, provided that: \n“Effective January 1, 1990, a mass mailing (as defined in section 3210(a)(6)(E) of title 39, United States Code) by a Senator shall be limited to 2 sheets of paper (or their equivalent), including any enclosure that-\n\n\t“(1) is prepared by or for the Senator who makes the mailing; or\n\n\n\t“(2) contains information concerning, expresses the views of, or otherwise relates to the Senator who makes the mailing.”\n\n\n\n[Pub. L. 102-392, title III, § 308(b), Oct. 6, 1992, 106 Stat. 1722, provided that: “The amendments made by subsection (a) [amending section 316(a) of Pub. L. 101-163, set out above] shall take effect on October 1, 1992.”\n]"}},{"id":"id:division:division::d1a650ba-0752-4aa0-bd43-f6f4c616a559","relevance":0.23419740777527762,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::d1a650ba-0752-4aa0-bd43-f6f4c616a559","id":"d1a650ba-0752-4aa0-bd43-f6f4c616a559","jurisdiction":"FED","lawKey":"FED-USC","label":"section_167j","path":"title_2.chapter_5.section_167j","divisionType":"167j","identifier":"167j","name":"Area comprising Library of Congress grounds; “buildings and grounds” defined","plaintextContent":"(a) The Library of Congress grounds shall be held to extend to the line of the face of the east curb of First Street Southeast, between B Street Southeast and East Capitol Street; to the line of the face of the south curb of East Capitol Street, between First Street Southeast and Second Street Southeast; to the line of the face of the west curb of Second Street Southeast, between East Capitol Street and B Street Southeast; to the line of the face of the north curb of B Street Southeast, between First Street Southeast and Second Street Southeast; and to the line of the face of the east curb of Second Street Southeast, between Pennsylvania Avenue Southeast and the north side of the alley separating the Library Annex Building and the Folger Shakespeare Library; to the line of the north side of the same alley, between Second Street Southeast and Third Street Southeast; to the line of the face of the west curb of Third Street Southeast, between the north side of the same alley and B Street Southeast; to the line of the face of the north curb of B Street Southeast, between Third Street Southeast and Pennsylvania Avenue Southeast; to the line of the face of the northeast curb of Pennsylvania Avenue Southeast, between B Street Southeast and Second Street Southeast.(b) The term “Library of Congress buildings and grounds” shall include (1) the whole or any part of any building or structure which is occupied under lease or otherwise by the Library of Congress and is subject to supervision and control by the Librarian of Congress, (2) the land upon which there is situated any building or structure which is occupied wholly by the Library of Congress, and (3) any subway or enclosed passageway connecting two or more buildings or structures occupied in whole or in part by the Library of Congress.(c) The term “Library of Congress buildings and grounds” shall include (1) all real property in lot 51 in square 869 in the District of Columbia, as that lot appears on the records in the office of the Surveyor of the District of Columbia on August 1, 1990, extending to the outer face of the curbs of the square in which it is located and including all alleys or parts of alleys and streets within the lot lines and curb lines surrounding such real property, and (2) improvements to such real property.(d) The term “Library of Congress buildings and grounds” shall include the following property:    (1) Three parcels totaling approximately 45 acres, more or less, located in Culpeper County, Virginia, and identified as Culpeper County Tax Parcel Numbers 51-80B, 51-80C, and 51-80D, further described as real estate (consisting of 40.949 acres) conveyed to David and Lucile Packard Foundation by deed from Federal Reserve Bank of Richmond, dated May 15, 1998, and recorded May 19, 1998, in the Clerk’s Office, Circuit Court of Culpeper County, Virginia, in Deed Book 644, page 372; and real estate (consisting of 4.181 acres) conveyed to Packard Humanities Institute by deed from Russell H. Inskeep, dated February 13, 2002, and recorded February 13, 2002, in the Clerk’s Office, Circuit Court of Culpeper County, Virginia, as instrument number 020001299.    (2) Improvements to such real property.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title2-section167j&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Aug. 4, 1950, ch. 561, § 11, 64 Stat. 412; Pub. L. 91-281, June 17, 1970, 84 Stat. 309; Pub. L. 101-520, title II, § 205(d), Nov. 5, 1990, 104 Stat. 2272; Pub. L. 101-562, § 2(c), Nov. 15, 1990, 104 Stat. 2780; Pub. L. 105-144, § 2, Dec. 15, 1997, 111 Stat. 2667; Pub. L. 108-83, title I, § 1203(b), Sept. 30, 2003, 117 Stat. 1031; Pub. L. 110-161, div. H, title I, § 1004(d)(2)(D), Dec. 26, 2007, 121 Stat. 2234; Pub. L. 110-178, § 4(b)(4), Jan. 7, 2008, 121 Stat. 2552; Pub. L. 111-145, § 6(d)(1), Mar. 4, 2010, 124 Stat. 54.)\n\nEditorial Notes\n\nAmendments\n\n2010-Pub. L. 111-145 repealed Pub. L. 110-161, § 1004(d)(2)(D). See 2007 Amendment notes below.\n\n2008-Subsec. (a). Pub. L. 110-178, § 4(b)(4)(A), substituted “The” for “For the purposes of sections 167 to 167j of this title the”.\n\nSubsecs. (b) to (d). Pub. L. 110-178, § 4(b)(4)(B)-(D), substituted “The” for “For the purposes of sections 167 to 167j of this title, the”.\n\n2007-Subsec. (a). Pub. L. 110-161, § 1004(d)(2)(D)(i), which made amendment identical to that made by Pub. L. 110-178, § 4(b)(4)(A), was repealed by Pub. L. 111-145. See Effective Date of 2010 Amendment note below.\n\nSubsecs. (b) to (d). Pub. L. 110-161, § 1004(d)(2)(D)(ii)-(iv), which directed substitution of “The” for “For the purposes of sections 167 to 167j of this title the”, but could not be executed because “For the purposes of sections 167 to 167j of this title the” did not appear in text, was repealed by Pub. L. 111-145. See Effective Date of 2010 Amendment note below.\n\n2003-Subsec. (d)(1). Pub. L. 108-83 added par. (1) and struck out former par. (1) which read as follows: “Three parcels totaling approximately 41 acres, more or less, located in Culpeper County, Virginia, and identified as Culpeper County Tax Parcel Numbers 51-80B, 51-80C, and 51-80D, further described as real estate (consisting of 15.949 acres) conveyed to Federal Reserve Bank of Richmond by deed from Russell H. Inskeep and Jean H. Inskeep, his wife, dated October 1, 1964, and recorded October 7, 1964, in the Clerk’s Office, Circuit Court of Culpeper County, Virginia, in Deed Book 177, page 431; and real estate (consisting of 20.498 acres and consisting of 4.502 acres) conveyed to Federal Reserve Bank of Richmond by deed from Russell H. Inskeep and Jean H. Inskeep, his wife, dated November 11, 1974, and recorded November 12, 1974, in the Clerk’s Office, Circuit Court of Culpeper County, Virginia, in Deed Book 247, page 246.”\n\n1997-Subsec. (d). Pub. L. 105-144 added subsec. (d).\n\n1990-Subsec. (c). Pub. L. 101-520 and Pub. L. 101-562 made substantially identical amendments, adding subsec. (c). The text of subsec. (c) is based on amendment by Pub. L. 101-562.\n\n1970-Pub. L. 91-281 designated existing provisions as subsec. (a) and added subsec. (b).\n\nStatutory Notes and Related Subsidiaries\n\nEffective Date of 2010 Amendment\n\nRepeal of section 1004 of Pub. L. 110-161 by Pub. L. 111-145 effective as if included in the enactment of Pub. L. 110-161 and provisions amended by section 1004 of Pub. L. 110-161 to be restored as if such section had not been enacted, and repeal to have no effect on the enactment or implementation of any provision of Pub. L. 110-178, see section 6(d) of Pub. L. 111-145, set out as a note under section 1901 of this title.\n\nEffective Date of 2008 Amendment\n\nAmendment by Pub. L. 110-178 effective Oct. 1, 2009, see section 4(d) of Pub. L. 110-178, set out as an Effective Date of Repeal note under former section 167 of this title.\n\nEffective Date of 1997 Amendment\n\nAmendment by Pub. L. 105-144 effective upon acquisition by Architect of the Capitol of property described in section 1 of Pub. L. 105-144, see section 5 of Pub. L. 105-144, set out as an Acquisition of Real Property for Library of Congress note under section 141 of this title.\n\nEffective Date of 1990 Amendments\n\nAmendment by Pub. L. 101-520 and Pub. L. 101-562 effective on date [Nov. 6, 1991] Architect of the Capitol acquires the property and improvements described in Pub. L. 101-520, § 205(a), and Pub. L. 101-562, § 1, see section 205(e) of Pub. L. 101-520 and former section 2(d) of Pub. L. 101-562, set out as a Special Facilities Center; Acquisition note under section 141 of this title."}},{"id":"id:division:division::e3e2e32b-0a1b-4a5a-9fc7-5b94cd68a11f","relevance":0.2312300002903967,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::e3e2e32b-0a1b-4a5a-9fc7-5b94cd68a11f","id":"e3e2e32b-0a1b-4a5a-9fc7-5b94cd68a11f","jurisdiction":"FED","lawKey":"FED-CFR","label":"section_202_19","path":"title_37.chapter_ii.subchapter_a.part_202.section_202_19","divisionType":"202.19","identifier":"202.19","name":"Deposit of published copies or phonorecords for the Library of Congress","plaintextContent":"(a) General. This section prescribes rules pertaining to the deposit of copies and phonorecords of published works for the Library of Congress under section 407 of title 17 of the United States Code. The provisions of this section are not applicable to the deposit of copies and phonorecords for purposes of copyright registration under section 408 of title 17, except as expressly adopted in § 202.20.(b) Definitions. For the purposes of this section:    (1)         (i) The best edition of a work is the edition, published in the United States at any time before the date of deposit, that the Library of Congress determines to be most suitable for its purposes. The “best edition” requirement is described in detail at Appendix B to this part.        (ii) Criteria for selection of the “best edition” from among two or more published editions of the same version of the same work are set forth in the statement entitled “Best Edition of Published Copyrighted Works for the Collections of the Library of Congress” (hereafter referred to as the “Best Edition Statement”) in effect at the time of deposit.        (iii) Where no specific criteria for the selection of the “best edition” are established in the Best Edition Statement, that edition which, in the judgment of the Library of Congress, represents the highest quality for its purposes shall be considered the “best edition.” In such cases:            (A) When the Copyright Office is aware that two or more editions of a work have been published it will consult with other appropriate officials of the Library of Congress to obtain instructions as to the “best edition” and (except in cases for which special relief is granted) will require deposit of that edition; and            (B) When a potential depositor is uncertain which of two or more published editions comprises the “best edition”, inquiry should be made to Acquisitions and Deposits.        (iv) Where differences between two or more “editions” of a work represent variations in copyrightable content, each edition is considered a separate version, and hence a different work, for the purpose of this section, and criteria of “best edition” based on such differences do not apply.    (2) A complete copy includes all elements comprising the unit of publication of the best edition of the work, including elements that, if considered separately, would not be copyrightable subject matter or would otherwise be exempt from the mandatory deposit requirement under paragraph (c) of this section.        (i) In the case of sound recordings, a “complete” phonorecord includes the phonorecord, together with any printed or other visually perceptible material published with such phonorecord (such as textual or pictorial matter appearing on record sleeves or album covers, or embodied in leaflets or booklets included in a sleeve, album, or other container).        (ii) In the case of a musical composition published in copies only, or in both copies and phonorecords:            (A) If the only publication of copies in the United States took place by the rental, lease, or lending of a full score and parts, a full score is a “complete” copy; and            (B) If the only publication of copies in the United States took place by the rental, lease, or lending of a conductor's score and parts, a conductor's score is a “complete” copy.        (iii) In the case of a motion picture, a copy is “complete” if the reproduction of all of the visual and aural elements comprising the copyrightable subject matter in the work is clean, undamaged, undeteriorated, and free of splices, and if the copy itself and its physical housing are free of any defects that would interfere with the performance of the work or that would cause mechanical, visual, or audible defects or distortions.        (iv) In the case of an electronic work published in the United States and available only online, a copy is “complete” if it includes all elements constituting the work in its published form, i.e., the complete work as published, including metadata and formatting codes otherwise exempt from mandatory deposit.    (3) The terms architectural works, copies, collective work, device, fixed, literary work, machine, motion picture, phonorecord, publication, sound recording, useful article, and their variant forms, have the meanings given to them in 17 U.S.C. 101.    (4) For purposes of paragraph (c)(5) of this section:        (i) An electronic-only serial is a serial as defined in § 202.3(b)(1)(v) that is published in electronic form in the United States and available only online.        (ii) An electronic-only book is an electronic literary work published in one volume or a finite number of volumes published in the United States and available only online. This class excludes literary works distributed solely in phonorecords (e.g., audiobooks), serials (as defined in § 202.3(b)(1)(v)), computer programs, websites, blogs, emails, and short online literary works such as social media posts.        (iii) A work shall be deemed to be available only online even if copies have been made available to individual consumers or other end users to print on demand, so long as the work is otherwise available only online. A work also shall be deemed to be available only online even if copies have been loaded onto electronic devices, such as tablets or e-readers, in advance of sale to individual consumers, so long as the work is otherwise available only online.    (5) The term literary monograph means a literary work published in one volume or a finite number of volumes. This category does not include serials, nor does it include legal publications that are published in one volume or a finite number of volumes that contain legislative enactments, judicial decisions, or other edicts of government.(c) Exemptions from deposit requirements. The following categories of material are exempt from the deposit requirements of section 407(a) of title 17:    (1) Diagrams and models illustrating scientific or technical works or formulating scientific or technical information in linear or three-dimensional form, such as an architectural or engineering blueprint, plan, or design, a mechanical drawing, or an anatomical model.    (2) Greeting cards, picture postcards, and stationery.    (3) Lectures, sermons, speeches, and addresses when published individually and not as a collection of the works of one or more authors.    (4) Literary, dramatic, and musical works published only as embodied in phonorecords. This category does not exempt the owner of copyright, or of the exclusive right of publication, in a sound recording resulting from the fixation of such works in a phonorecord from the applicable deposit requirements for the sound recording.    (5) Electronic works published in the United States and available only online. This exemption includes electronic-only books and electronic serials available only online only until such time as a demand is issued by the Copyright Office under the regulations set forth in § 202.24. This exemption does not apply to works that are published in both online, electronic formats and in physical formats, which remain subject to the appropriate mandatory deposit requirements.    (6) Three-dimensional sculptural works, and any works published only as reproduced in or on jewelry, dolls, toys, games, plaques, floor coverings, wallpaper and similar commercial wall coverings, textiles and other fabrics, packaging material, or any useful article. Globes, relief models, and similar cartographic representations of area are not within this category and are subject to the applicable deposit requirements.    (7) Prints, labels, and other advertising matter, including catalogs, published in connection with the rental lease, lending, licensing, or sale of articles of merchandise, works of authorship, or services.    (8) Tests, and answer material for tests when published separately from other literary works.    (9) Works first published as individual contributions to collective works. This category does not exempt the owner of copyright, or of the exclusive right of publication, in the collective work as a whole, from the applicable deposit requirements for the collective work.    (10) Works first published outside the United States and later published in the United States without change in copyrightable content, if:        (i) Registration for the work was made under 17 U.S.C. 408 before the work was published in the United States; or        (ii) Registration for the work was made under 17 U.S.C. 408 after the work was published in the United States but before a demand for deposit is made under 17 U.S.C. 407(d).    (11) Works published only as embodied in a soundtrack that is an integral part of a motion picture. This category does not exempt the owner of copyright, or of the exclusive right of publication, in the motion picture, from the applicable deposit requirements for the motion picture.    (12) Motion pictures that consist of television transmission programs and that have been published, if at all, only by reason of a license or other grant to a nonprofit institution of the right to make a fixation of such programs directly from a transmission to the public, with or without the right to make further uses of such fixations.(d) Nature of required deposit.    (1) Subject to the provisions of paragraph (d)(2) of this section, the deposit required to satisfy the provisions of section 407(a) of title 17 shall consist of:        (i) In the case of published works other than sound recordings, two complete copies of the best edition; and        (ii) In the case of published sound recordings, two complete phonorecords of the best edition.    (2) In the case of certain published works not exempt from deposit requirements under paragraph (c) of this section, the following special provisions shall apply:        (i) In the case of published three-dimensional cartographic representations of area, such as globes and relief models, the deposit of one complete copy of the best edition of the work will suffice in lieu of the two copies required by paragraph (d)(1) of this section.        (ii) In the case of published motion pictures, the deposit of one complete copy of the best edition of the work will suffice in lieu of the two copies required by paragraph (d)(1) of this section. Any deposit of a published motion picture must be accompanied by a separate description of its contents, such as a continuity, pressbook, or synopsis. The Library of Congress may, at its sole discretion, enter into an agreement permitting the return of copies of published motion pictures to the depositor under certain conditions and establishing certain rights and obligations of the Library with respect to such copies. In the event of termination of such an agreement by the Library it shall not be subject to reinstatement, nor shall the depositor or any successor in interest of the depositor be entitled to any similar or subsequent agreement with the Library, unless at the sole discretion of the Library it would be in the best interests of the Library to reinstate the agreement or enter into a new agreement.        (iii) In the case of any published work deposited in the form of a hologram, the deposit shall be accompanied by:            (A) Two sets of precise instructions for displaying the image fixed in the hologram; and            (B) Two sets of identifying material in compliance with § 202.21 and clearly showing the displayed image.        (iv) In any case where an individual author is the owner of copyright in a published pictorial or graphic work and:            (A) Less than five copies of the work have been published; or            (B) The work has been published and sold or offered for sale in a limited edition consisting of no more than three hundred numbered copies, the deposit of one complete copy of the best edition of the work or, alternatively, the deposit of photographs or other identifying material in compliance with § 202.21, will suffice in lieu of the two copies required by paragraph (d)(1) of this section.        (v) In the case of a musical composition published solely in copies, or in both copies and phonorecords, the deposit of one complete copy of the best edition will suffice in lieu of the two copies required by paragraph (d)(1) of this section.        (vi) In the case of published multimedia kits that include literary works, audiovisual works, sound recordings, or any combination of such works, the deposit of one complete copy of the best edition will suffice in lieu of the two copies required by paragraph (d)(1) of this section.        (vii) In the case of published computer programs and published computerized information works, such as statistical compendia, serials, and reference works that are not copy-protected, the deposit of one complete copy of the best edition as specified in the current Library of Congress Best Edition Statement will suffice in lieu of the two copies required by paragraph (d)(1) of this section. If the works are copy-protected, two copies of the best edition are required.        (viii) In the case of published architectural works, the deposit shall consist of the most finished form of presentation drawings in the following descending order of preference:            (A) Original format, or best quality form of reproduction, including offset or silk screen printing;            (B) Xerographic or photographic copies on good quality paper;            (C) Positive photostat or photodirect positive;            (D) Blue line copies (diazo or ozalid process). If photographs are submitted, they should be 8 × 10 inches and should clearly show several exterior and interior views. The deposit should disclose the name(s) of the architect(s) and draftsperson(s) and the building site.        (ix) In the case of published literary monographs, the deposit of one complete copy of the best edition of the work will suffice in lieu of the two copies required by paragraph (d)(1) of this section, unless the Copyright Office issues a demand for a second copy pursuant to 17 U.S.C. 407(d).        (x) In the case of published newspapers, a deposit submitted pursuant to and in compliance with the group registration option under § 202.4(e) shall be deemed to satisfy the mandatory deposit obligation under this section.        (xi) In the case of serials (as defined in § 202.3(b)(1)(v), but excluding newspapers) published in the United States in a physical format, or in both a physical and an electronic format, the copyright owner or the owner of the exclusive right of publication must provide the Library of Congress with two complimentary subscriptions to the serial, unless Acquisitions and Deposits informs the owner that the serial is not needed for the Library's collections. Subscription copies must be physically mailed to the Copyright Office, at the address for mandatory deposit copies specified in § 201.1(c) of this chapter, promptly after the publication of each issue, and the subscription(s) must be maintained on an ongoing basis. The owner may cancel the subscription(s) if the serial is no longer published by the owner, if the serial is no longer published in the United States in a physical format, or if Acquisitions and Deposits informs the owner that the serial is no longer needed for the Library's collections. In addition, prior to commencing the subscriptions, the owner must send a letter to Acquisitions and Deposits at the address specified in § 201.1(b) of this chapter confirming that the owner will provide the requested number of subscriptions for the Library of Congress. The letter must include the name of the publisher, the title of the serial, the International Standard Serial Number (“ISSN”) that has been assigned to the serial (if any), and the issue date and the numerical or chronological designations that appear on the first issue that will be provided under the subscriptions.(e) Special relief.    (1) In the case of any published work not exempt from deposit under paragraph (c) of this section, the Register of Copyrights may, after consultation with other appropriate officials of the Library of Congress and upon such conditions as the Register may determine after such consultation:        (i) Grant an exemption from the deposit requirements of section 407(a) of title 17 on an individual basis for single works or series or groups of works; or        (ii) Permit the deposit of one copy or phonorecord, or alternative identifying material, in lieu of the two copies or phonorecords required by paragraph (d)(1) of this section; or        (iii) Permit the deposit of incomplete copies or phonorecords, or copies or phonorecords other than those normally comprising the best edition; or        (iv) Permit the deposit of identifying material which does not comply with § 202.21.    (2) Any decision as to whether to grant such special relief, and the conditions under which special relief is to be granted, shall be made by the Register of Copyrights after consultation with other appropriate officials of the Library of Congress, and shall be based upon the acquisition policies of the Library of Congress then in force.    (3) Requests for special relief under this paragraph shall be made in writing to the Associate Register of Copyrights and Director of the Office of Registration Policy and Practice, shall be signed by or on behalf of the owner of copyright or of the exclusive right of publication in the work, and shall set forth specific reasons why the request should be granted.    (4) The Register of Copyrights may, after consultation with other appropriate officials of the Library of Congress, terminate any ongoing or continuous grant of special relief. Notice of termination shall be given in writing and shall be sent to the individual person or organization to whom the grant of special relief had been given, at the last address shown in the records of the Copyright Office. A notice of termination may be given at any time, but it shall state a specific date of termination that is at least 30 days later than the date the notice is mailed. Termination shall not affect the validity of any deposit made earlier under the grant of special relief.(f) Submission and receipt of copies and phonorecords.    (1) All copies and phonorecords deposited in the Copyright Office will be considered to be deposited only in compliance with section 407 of title 17 unless they are accompanied by an application for registration of a claim to copyright in the work represented by the deposit, and either a registration fee or a deposit account number. Copies or phonorecords deposited without such an accompanying application and either a fee or a deposit account notation will not be connected with or held for receipt of separate applications, and will not satisfy the deposit provisions of section 408 of title 17 or § 202.20.    (2) All copies and phonorecords deposited in the Copyright Office under section 407 of title 17, unless accompanied by written instructions to the contrary, will be considered to be deposited by the person or persons named in the copyright notice on the work.    (3) Upon request by the depositor made at the time of the deposit, the Copyright Office will issue a certificate of receipt for the deposit of copies or phonorecords of a work under this section. Certificates of receipt will be issued in response to requests made after the date of deposit only if the requesting party is identified in the records of the Copyright Office as having made the deposit. In either case, requests for a certificate of receipt must be in writing and accompanied by the appropriate fee, as required in § 201.3(c). A certificate of receipt will include identification of the depositor, the work deposited, and the nature and format of the copy or phonorecord deposited, together with the date of receipt.","sourceUrl":"https://ecfr.federalregister.gov/current/title-37/section-202.19","isRepealed":false,"isReserved":false,"retrievalDate":20240113,"annotations":"[51 FR 6403, Feb. 24, 1986, as amended at 54 FR 42299, Oct. 16, 1989; 56 FR 47403, Sept. 19, 1991; 56 FR 59885, Nov. 26, 1991; 57 FR 45310, Oct. 1, 1992; 60 FR 34168, June 30, 1995; 64 FR 29522, June 1, 1999; 64 FR 62978, Nov. 18, 1999; 66 FR 34373, June 28, 2001; 73 FR 37839, July 2, 2008; 75 FR 3869, Jan. 25, 2010; 82 FR 9360, Feb. 6, 2017; 83 FR 2372, Jan. 17, 2018; 83 FR 4147, Jan. 30, 2018; 83 FR 25375, June 1, 2018; 83 FR 61550, Nov. 30, 2018; 85 FR 71837, Nov. 12, 2020; 86 FR 32642, June 22, 2021]"}},{"id":"id:division:division::c6532707-7f3f-424d-8aff-bc1171558e19","relevance":0.23008261861819096,"source":"laws_content","fields":{"sddocname":"division","documentid":"id:division:division::c6532707-7f3f-424d-8aff-bc1171558e19","id":"c6532707-7f3f-424d-8aff-bc1171558e19","jurisdiction":"FED","lawKey":"FED-USC","label":"section_8001","path":"title_22.chapter_87.section_8001","divisionType":"8001","identifier":"8001","name":"Sense of Congress","plaintextContent":"It is the sense of Congress that-(1) preventing the proliferation of nuclear weapons, other weapons of mass destruction, the means to produce them, and the means to deliver them are critical objectives for United States foreign policy;(2) sustaining the Nuclear Non-Proliferation Treaty (NPT) and strengthening its implementation, particularly its verification and compliance, is the keystone of United States nonproliferation policy;(3) the NPT has been a significant success in preventing the acquisition of nuclear weapons capabilities and maintaining a stable international security situation;(4) countries that have never become a party to the NPT and remain outside that treaty’s legal regime pose a potential challenge to the achievement of the overall goals of global nonproliferation, because those countries have not undertaken the NPT obligation to prohibit the spread of nuclear weapons capabilities;(5) it is in the interest of the United States to the fullest extent possible to ensure that those countries that are not States Party to the NPT are responsible in the disposition of any nuclear technology they develop;(6) it is in the interest of the United States to enter into an agreement for nuclear cooperation arranged pursuant to section 2153 of title 42 with a country that has never been a State Party to the NPT if-    (A) the country has demonstrated responsible behavior with respect to the nonproliferation of technology related to nuclear weapons and the means to deliver them;    (B) the country has a functioning and uninterrupted democratic system of government, has a foreign policy that is congruent to that of the United States, and is working with the United States on key foreign policy initiatives related to nonproliferation;    (C) such cooperation induces the country to promulgate and implement substantially improved protections against the proliferation of technology related to nuclear weapons and the means to deliver them, and to refrain from actions that would further the development of its nuclear weapons program; and    (D) such cooperation will induce the country to give greater political and material support to the achievement of United States global and regional nonproliferation objectives, especially with respect to dissuading, isolating, and, if necessary, sanctioning and containing states that sponsor terrorism and terrorist groups that are seeking to acquire a nuclear weapons capability or other weapons of mass destruction capability and the means to deliver such weapons;(7) the United States should continue its policy of engagement, collaboration, and exchanges with and between India and Pakistan;(8) strong bilateral relations with India are in the national interest of the United States;(9) the United States and India share common democratic values and the potential for increasing and sustained economic engagement;(10) commerce in civil nuclear energy with India by the United States and other countries has the potential to benefit the people of all countries;(11) such commerce also represents a significant change in United States policy regarding commerce with countries that are not States Party to the NPT, which remains the foundation of the international nonproliferation regime;(12) any commerce in civil nuclear energy with India by the United States and other countries must be achieved in a manner that minimizes the risk of nuclear proliferation or regional arms races and maximizes India’s adherence to international nonproliferation regimes, including, in particular, the guidelines of the Nuclear Suppliers Group (NSG); and(13) the United States should not seek to facilitate or encourage the continuation of nuclear exports to India by any other party if such exports are terminated under United States law.","sourceUrl":"https://uscode.house.gov/view.xhtml?req=granuleid:USC-prelim-title22-section8001&num=0&edition=prelim","isRepealed":false,"isReserved":false,"retrievalDate":20240207,"annotations":"(Pub. L. 109-401, title I, § 102, Dec. 18, 2006, 120 Stat. 2726.)\n\nStatutory Notes and Related Subsidiaries\n\nShort Title\nPub. L. 109-401, title I, § 101, Dec. 18, 2006, 120 Stat. 2726, provided that: “This title [enacting this chapter and amending section 2652c of this title and section 2153 of Title 42, The Public Health and Welfare] may be cited as the ‘Henry J. Hyde United States-India Peaceful Atomic Energy Cooperation Act of 2006’.”\n\n\nUnited States-India Nuclear Cooperation Approval and Nonproliferation Enhancement\nPub. L. 110-369, Oct. 8, 2008, 122 Stat. 4028, provided that:\n“SECTION 1. SHORT TITLE AND TABLE OF CONTENTS.\n\n“(a) Short Title.-\nThis Act may be cited as the ‘United States-India Nuclear Cooperation Approval and Nonproliferation Enhancement Act’.\n\n\n“(b) Table of Contents.-\n\n[Omitted.]"}}]}}
  recorded_at: Sat, 30 Mar 2024 05:37:33 GMT
recorded_with: VCR 6.2.0
